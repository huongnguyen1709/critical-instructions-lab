{"version":3,"sources":["components/navbar/SignedInLinks.js","store/actions/authActions.js","components/navbar/SignedOutLinks.js","components/navbar/NavBar.js","components/auth/SignIn.js","components/auth/SignUp.js","components/instructions/InstructionDetail.js","components/instructions/CreateInstruction.js","store/actions/instructionActions.js","components/dashboard/Notifications.js","components/instructions/InstructionSummary.js","components/instructions/InstructionList.js","components/dashboard/TeacherDashboard.js","components/dashboard/StudentDashboard.js","components/dashboard/HomePage.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/instructionReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignIn","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","this","authError","onSubmit","htmlFor","onChange","Component","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","compose","ownProps","match","params","instructions","data","instruction","firestoreConnect","title","src","alt","content","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","CreateInstruction","image","handleImage","files","createInstruction","history","push","class","accept","authorId","file","storage","ref","name","put","on","snapshot","child","getDownloadURL","url","add","Date","Notifications","InstructionSummary","InstructionList","map","key","TeacherDashboard","ordered","StudentDashboard","HomePage","App","exact","path","component","InstructionDetail","Boolean","window","location","hostname","initState","authReducer","action","message","instructionReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9dcbf942.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Instruction</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'LOGIN_ERROR', error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            console.log(resp)\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n                email: newUser.email,\r\n                password: newUser.password\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">theFirma</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: creds => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst InstructionDetail = (props) => {\r\n    const { instruction, auth } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (instruction) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{instruction.title}</span>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <p>{instruction.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {instruction.authorFirstName} {instruction.authorLastName}</div>\r\n                        <div>{moment(instruction.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading instruction...</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const instructions = state.firestore.data.instructions\r\n    const instruction = instructions ? instructions[id] : null\r\n    return {\r\n        instruction: instruction,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(InstructionDetail);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createInstruction } from '../../store/actions/instructionActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateInstruction extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        image: null\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = e => {\r\n        if (e.target.files[0])\r\n            this.setState({\r\n                image: e.target.files[0]\r\n            })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.createInstruction(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Instruction</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Instruction Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"file-field input-field mt-30\">\r\n                        <div class=\"btn\">\r\n                            <span>Select image</span>\r\n                            <input id=\"image\" type=\"file\" accept=\"image/*\" onChange={this.handleImage} />\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createInstruction: instruction => dispatch(createInstruction(instruction))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateInstruction);","export const createInstruction = instruction => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        const file = instruction.image\r\n\r\n        if (file) {\r\n            console.log(file)\r\n            const storageRef = firebase.storage().ref(`images/${file.name}`)\r\n            const uploadTask = storageRef.put(file)\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                snapshot => { },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    firebase.storage()\r\n                        .ref(\"images\")\r\n                        .child(instruction.image.name)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            console.log(url)\r\n                            firestore.collection('instructions').add({\r\n                                ...instruction,\r\n                                image: url,\r\n                                authorFirstName: profile.firstName,\r\n                                authorLastName: profile.lastName,\r\n                                authorId: authorId,\r\n                                createdAt: new Date()\r\n                            }).then(() => {\r\n                                dispatch({ type: 'CREATE_INSTRUCTION', instruction })\r\n                            }).catch((error) => {\r\n                                dispatch({ type: 'CREATE_INSTRUCTION_ERROR', error })\r\n                            })\r\n                        })\r\n                }\r\n            )\r\n        } else {\r\n            firestore.collection('instructions').add({\r\n                ...instruction,\r\n                image: 'image not found',\r\n                authorFirstName: profile.firstName,\r\n                authorLastName: profile.lastName,\r\n                authorId: authorId,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({ type: 'CREATE_INSTRUCTION', instruction })\r\n            }).catch((error) => {\r\n                dispatch({ type: 'CREATE_INSTRUCTION_ERROR', error })\r\n            })\r\n        }\r\n\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Notifications = (props) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst InstructionSummary = ({ instruction }) => {\r\n    return (\r\n\r\n        <div className=\"card z-depth-0 instruction-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{instruction.title}</span>\r\n                <p>Posted by {instruction.authorFirstName} {instruction.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(instruction.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InstructionSummary;","import React from 'react'\r\nimport InstructionSummary from './InstructionSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst InstructionList = ({ instructions }) => {\r\n    return (\r\n        <div className=\"instruction-list section\">\r\n            {instructions && instructions.map(instruction => {\r\n                return (\r\n                    <Link to={'/instruction/' + instruction.id} key={instruction.id}>\r\n                        <InstructionSummary instruction={instruction} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InstructionList;","import React, { Component } from 'react'\r\nimport Notifications from '../dashboard/Notifications'\r\nimport ProjectList from '../instructions/InstructionList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass TeacherDashboard extends Component {\r\n    state = {}\r\n    render() {\r\n        const { instructions } = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList instructions={instructions} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instructions: state.firestore.ordered.instructions,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(TeacherDashboard);","import React, { Component } from 'react'\r\n\r\nclass StudentDashboard extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s8 offset-s2\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentDashboard;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TeacherDashboard from './TeacherDashboard';\r\nimport StudentDashboard from './StudentDashboard';\r\n\r\nclass HomePage extends Component {\r\n    state = {}\r\n    render() {\r\n        const { auth } = this.props\r\n        return (\r\n            <div>\r\n                {\r\n                    auth.uid ? <TeacherDashboard /> : <StudentDashboard />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage)","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/navbar/NavBar'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport InstructionDetail from './components/instructions/InstructionDetail'\nimport CreateInstruction from './components/instructions/CreateInstruction'\nimport HomePage from './components/dashboard/HomePage'\n\nfunction App(props) {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar />\n                <Switch>\n                    <Route exact path='/' component={HomePage} />\n                    <Route path='/signin' component={SignIn} />\n                    <Route path='/signup' component={SignUp} />\n                    <Route path='/instruction/:id' component={InstructionDetail} />\n                    <Route path='/create' component={CreateInstruction} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    instructions: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\nconst instructionReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_INSTRUCTION':\r\n            console.log('create instruction', action.instruction)\r\n            return state\r\n        case 'CREATE_INSTRUCTION_ERROR':\r\n            console.log('create instruction error', action.error)\r\n            return state\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default instructionReducer","import authReducer from './authReducer'\r\nimport instructionReducer from './instructionReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    instruction: instructionReducer,\r\n    // sync data from firestore database\r\n    firestore: firestoreReducer,\r\n    // authentication\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBzgWLIrtxnjRdiTn_7SIfoKTCi6pKkzmE\",\r\n    authDomain: \"critical-instructions-lab.firebaseapp.com\",\r\n    databaseURL: \"https://critical-instructions-lab.firebaseio.com\",\r\n    projectId: \"critical-instructions-lab\",\r\n    storageBucket: \"critical-instructions-lab.appspot.com\",\r\n    messagingSenderId: \"121402491624\",\r\n    appId: \"1:121402491624:web:a18042474c049be805ff5d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage()\r\n\r\nexport {\r\n    storage, firebase as default\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // attachAuthIsReady make sure that authentication on firebase is ready before rendering a DOM\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.Fragment>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n})"],"sourceRoot":""}