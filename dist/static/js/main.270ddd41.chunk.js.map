{"version":3,"sources":["components/navbar/SignedInLinks.js","store/actions/authActions.js","components/navbar/SignedOutLinks.js","components/navbar/NavBar.js","components/auth/SignIn.js","components/auth/SignUp.js","components/instructions/InstructionDetail.js","store/actions/instructionActions.js","components/instructions/CreateInstruction.js","components/instructions/EditInstruction.js","components/instructions/InstructionSummary.js","components/instructions/InstructionList.js","components/student/StudentInstruc.js","components/student/InstrucDetail.js","components/student/QuestionDetail.js","components/dashboard/Dashboard.js","components/questions/AddQuestion.js","store/actions/questionActions.js","components/questions/QuestionSummary.js","components/questions/EditQuestion.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/instructionReducer.js","store/reducers/questionReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignIn","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","this","authError","onSubmit","htmlFor","onChange","Component","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","compose","ownProps","instructionId","match","params","instructions","data","instruction","deleteInstruction","image","delete","err","imageFileName","storage","ref","firestoreConnect","title","content","src","alt","authorId","moment","createdAt","toDate","calendar","authorFirstName","authorLastName","window","confirm","history","push","onDelete","onActionInstruction","CreateInstruction","handleImage","files","createInstruction","class","accept","file","name","put","on","snapshot","child","getDownloadURL","url","add","Date","EditInstruction","newImage","imageOnChange","URL","createObjectURL","editInstruction","nextProps","newImageFile","update","imageRef","Response","questions","ordered","quesAvailable","length","question","filter","map","ques","authUid","InstructionList","key","StudentInstruc","onMoveToNextIns","answer","index","newInstruction","disabled","onResetAnswer","quesDisabled","onHandleQuesAvai","onReceiveDetail","alert","show","onShowDetail","onShowQuestion","withAlert","InstrucDetail","QuestionDetail","handleOptionChange","selectedOption","rightAnswer","onAnswer","showQuestionDetail","answer2","answer3","answer4","TeacherDashboard","showDetail","showQuestion","answers","onInstructionId","onAnswerCheck","AddQuestion","addQuestion","EditQuestion","questionId","editQuestion","deleteQuestion","quesId","instrucId","App","exact","path","component","Dashboard","InstructionDetail","QuestionSummary","Boolean","location","hostname","initState","authReducer","action","message","instructionReducer","questionReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","options","position","positions","TOP_CENTER","timeout","offset","transition","transitions","SCALE","firebaseAuthIsReady","ReactDOM","render","Fragment","template","AlertTemplate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4QAqBeA,cAAQ,MANI,SAAAC,GACvB,MAAO,CACHC,QAAS,kBAAMD,GCFZ,SAACA,EAAUE,EAAX,IACcC,EAD2B,EAAlBA,eAEjBC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAAEM,KAAM,8BDGdP,EAhBO,SAACQ,GACnB,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,oBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCAAmCD,EAAMI,QAAQC,eEE5EC,EATQ,WACnB,OACI,wBAAIL,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCoBDV,eARS,SAAAe,GAEpB,OADAC,QAAQC,IAAIF,GACL,CACHV,KAAMU,EAAMG,SAASb,KACrBO,QAASG,EAAMG,SAASN,WAIjBZ,EArBA,SAACQ,GAAW,IACfH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QACRO,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAc,kBAAC,EAAD,MAC/D,OACI,yBAAKH,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,YACCU,O,wCCRXE,E,4MACFN,MAAQ,CACJO,MAAO,GACPC,SAAU,I,EAGdC,aAAe,SAAAC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKvB,MAAMwB,OAAO,EAAKjB,Q,uDAGjB,IAAD,EACuBkB,KAAKzB,MAAzB0B,EADH,EACGA,UACR,OAFK,EACc7B,KACVe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAE9B,yBAAKD,UAAU,aACX,0BAAM0B,SAAUF,KAAKH,aAAcrB,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WAEA,yBAAKA,UAAU,eACX,2BAAO2B,QAAQ,SAAf,SACA,2BAAO7B,KAAK,QAAQqB,GAAG,QAAQS,SAAUJ,KAAKT,gBAGlD,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,YAAf,YACA,2BAAO7B,KAAK,WAAWqB,GAAG,WAAWS,SAAUJ,KAAKT,gBAGxD,yBAAKf,UAAU,eACX,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACVyB,EAAY,2BAAIA,GAAiB,a,GAtCzCI,aA4DNtC,eAbS,SAAAe,GACpB,MAAO,CACHmB,UAAWnB,EAAMV,KAAK6B,UACtB7B,KAAMU,EAAMG,SAASb,SAIF,SAAAJ,GACvB,MAAO,CACH+B,OAAQ,SAAAO,GAAK,OAAItC,GH7DFuC,EG6DkBD,EH5D9B,SAACtC,EAAUE,EAAX,IACcC,EAD2B,EAAlBA,eAEjBC,OAAOoC,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdjB,MAAK,WACHL,EAAS,CAAEM,KAAM,qBAClBmC,OAAM,SAAAC,GACL1C,EAAS,CAAEM,KAAM,cAAeoC,gBATtB,IAACH,MGiERxC,CAA6CqB,GC5DtDuB,E,4MACF7B,MAAQ,CACJO,MAAO,GACPC,SAAU,GACVsB,UAAW,GACXC,SAAU,I,EAGdtB,aAAe,SAAAC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKvB,MAAMuC,OAAO,EAAKhC,Q,uDAGjB,IAAD,EACuBkB,KAAKzB,MAAzBH,EADH,EACGA,KAAM6B,EADT,EACSA,UACd,OAAI7B,EAAKe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAE9B,yBAAKD,UAAU,aACX,0BAAM0B,SAAUF,KAAKH,aAAcrB,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WAEA,yBAAKA,UAAU,eACX,2BAAO2B,QAAQ,SAAf,SACA,2BAAO7B,KAAK,QAAQqB,GAAG,QAAQS,SAAUJ,KAAKT,gBAGlD,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,YAAf,YACA,2BAAO7B,KAAK,WAAWqB,GAAG,WAAWS,SAAUJ,KAAKT,gBAGxD,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,YAAf,aACA,2BAAO7B,KAAK,OAAOqB,GAAG,WAAWS,SAAUJ,KAAKT,gBAGpD,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,aAAf,cACA,2BAAO7B,KAAK,OAAOqB,GAAG,YAAYS,SAAUJ,KAAKT,gBAGrD,yBAAKf,UAAU,eACX,4BAAQA,UAAU,gCAAlB,UACA,yBAAKA,UAAU,mBACVyB,EAAY,2BAAIA,GAAiB,a,GAlDzCI,aAwENtC,eAbS,SAAAe,GACpB,MAAO,CACHV,KAAMU,EAAMG,SAASb,KACrB6B,UAAWnB,EAAMV,KAAK6B,cAIH,SAAAjC,GACvB,MAAO,CACH8C,OAAQ,SAAAC,GAAO,OAAI/C,EJlDL,SAAA+C,GAClB,OAAO,SAAC/C,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa6C,EAAmB,EAAnBA,aACjC/B,EAAWd,IACX8C,EAAYD,IAElB/B,EAASb,OAAO8C,+BACZH,EAAQ1B,MACR0B,EAAQzB,UACVjB,MAAK,SAAA8C,GAEH,OADApC,QAAQC,IAAImC,GACLF,EAAUG,WAAW,SAASC,IAAIF,EAAKG,KAAKnC,KAAKoC,IAAI,CACxDX,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBjC,SAAUmC,EAAQH,UAAU,GAAKG,EAAQF,SAAS,GAClDxB,MAAO0B,EAAQ1B,MACfC,SAAUyB,EAAQzB,cAEvBjB,MAAK,WACJL,EAAS,CAAEM,KAAM,sBAClBmC,OAAM,SAAAC,GACL1C,EAAS,CAAEM,KAAM,eAAgBoC,cI8BTI,CAAOC,QAI5BhD,CAA6C4C,G,uCCqB7Ca,cACXzD,aAlBoB,SAACe,EAAO2C,GAC5B,IAAMC,EAAgBD,EAASE,MAAMC,OAAOjC,GACtCkC,EAAe/C,EAAMmC,UAAUa,KAAKD,aAE1C,MAAO,CACHE,YAFgBF,EAAeA,EAAaH,GAAiB,KAG7DtD,KAAMU,EAAMG,SAASb,KACrBsD,cAAeA,MAII,SAAC1D,GACxB,MAAO,CACHgE,kBAAmB,SAACN,EAAeK,GAAhB,OAAgC/D,ECiD1B,SAAC0D,EAAeK,GAC7C,OAAO,SAAC/D,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YACpB8C,GAAYD,EADwC,EAAnBA,gBAEjC/B,EAAWd,IAEjB,GADAY,QAAQC,IAAI+C,EAAYE,OACE,OAAtBF,EAAYE,MACZhB,EACKG,WAAW,gBACXC,IAAIK,GACJQ,SACA7D,MAAK,WACFL,EAAS,CAAEM,KAAM,qBAAsBoD,qBAE1CjB,OAAM,SAAA0B,GACHnE,EAAS,CAAEM,KAAM,2BAA4B6D,eAElD,CACH,IAAMC,EAAgBL,EAAYK,cACjBnD,EAASoD,UAAUC,IAAnB,iBAAiCF,IACzCF,SAAS7D,MAAK,WACnB4C,EACKG,WAAW,gBACXC,IAAIK,GACJQ,SACA7D,MAAK,WACFL,EAAS,CAAEM,KAAM,qBAAsBoD,qBAE1CjB,OAAM,SAAA0B,GACHnE,EAAS,CAAEM,KAAM,2BAA4B6D,gBD7EDH,CAAkBN,EAAeK,SAMjGQ,2BAAiB,CACb,CAAEnB,WAAY,kBAHPI,EA1FW,SAACjD,GAAW,IAC1BwD,EAAqCxD,EAArCwD,YAAa3D,EAAwBG,EAAxBH,KAAMsD,EAAkBnD,EAAlBmD,cAC3B,IAAKtD,EAAKe,IAAK,OAAO,kBAAC,IAAD,CAAUV,GAAG,YA2CnC,OAAIsD,EAEI,yBAAKvD,UAAU,qBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,4BACX,0BAAMA,UAAU,uCAAuCuD,EAAYS,OACnE,uBAAGhE,UAAU,SAASuD,EAAYU,SACjCV,EAAYE,MAAQ,yBAAKS,IAAKX,EAAYE,MAAOU,IAAKZ,EAAYK,gBAAoB,MAE3F,yBAAK5D,UAAU,iDACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,QACA,0BAAMA,UAAU,UA5B5BJ,EAAKe,KAAOf,EAAKe,MAAQ4C,EAAYa,SAEjC,6BACI,8CACA,6BAAMC,IAAOd,EAAYe,UAAUC,UAAUC,aAG9C5E,EAAKe,IAER,6BACI,0CAAgB4C,EAAYkB,gBAA5B,IAA8ClB,EAAYmB,gBAC1D,6BAAML,IAAOd,EAAYe,UAAUC,UAAUC,kBAJlD,GAtBiB,WACxB,GAAI5E,EAAKe,MAAQ4C,EAAYa,SACzB,OACI,6BACI,kBAAC,IAAD,CAAMnE,GAAI,gBAAkBiD,EAAgB,QAASlD,UAAU,sCAA/D,QACA,kBAAC,IAAD,CAAMC,GAAI,gBAAkBiD,EAAgB,IAAMK,EAAYa,SAAW,eAAgBpE,UAAU,sCAAnG,gBACA,kBAAC,IAAD,CAAMC,GAAI,gBAAkBiD,EAAgB,IAAMK,EAAYS,MAAQ,YAAahE,UAAU,sCAA7F,gBACA,4BAAQA,UAAU,+BAA+BE,QAAS,kBAhBzD,SAACgD,EAAeK,GACzB3D,EAAKe,MAAQ4C,EAAYa,UACrBO,OAAOC,QAAQ,uCACf7E,EAAMyD,kBAAkBN,EAAeK,GACvCxD,EAAM8E,QAAQC,KAAK,MAYiDC,CAAS7B,EAAeK,KAAxF,WAuCKyB,MAOb,yBAAKhF,UAAU,oBACX,yDEtEViF,E,4MACF3E,MAAQ,CACJ0D,MAAO,GACPC,QAAS,GACTR,MAAO,M,EAGX1C,aAAe,SAAAC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhC8D,YAAc,SAAAlE,GACNA,EAAEE,OAAOiE,MAAM,IACf,EAAKlE,SAAS,CACVwC,MAAOzC,EAAEE,OAAOiE,MAAM,M,EAIlC9D,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKvB,MAAMqF,kBAAkB,EAAK9E,OAClC,EAAKP,MAAM8E,QAAQC,KAAK,M,uDAKxB,OADiBtD,KAAKzB,MAAdH,KACEe,IAEN,yBAAKX,UAAU,aACX,0BAAM0B,SAAUF,KAAKH,aAAcrB,UAAU,SACzC,wBAAIA,UAAU,2BAAd,mBAEA,yBAAKA,UAAU,eACX,2BAAO2B,QAAQ,SAAf,SACA,2BAAO7B,KAAK,OAAOqB,GAAG,QAAQS,SAAUJ,KAAKT,gBAGjD,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,WAAf,uBACA,8BAAUR,GAAG,UAAUnB,UAAU,uBAAuB4B,SAAUJ,KAAKT,gBAG3E,yBAAKf,UAAU,gCACX,yBAAKqF,MAAM,OACP,8CACA,2BAAOlE,GAAG,QAAQrB,KAAK,OAAOwF,OAAO,UAAU1D,SAAUJ,KAAK0D,eAElE,yBAAKG,MAAM,qBACP,2BAAOA,MAAM,qBAAqBvF,KAAK,WAI/C,yBAAKE,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,QACA,4BAAQA,UAAU,gCAAlB,aA5BM,kBAAC,IAAD,CAAUC,GAAG,gB,GA5BX4B,aA4EjBtC,eAZS,SAACe,EAAO2C,GAC5B,MAAO,CACHrD,KAAMU,EAAMG,SAASb,SAIF,SAAAJ,GACvB,MAAO,CACH4F,kBAAmB,SAAA7B,GAAW,OAAI/D,ED7ET,SAAA+D,GAC7B,OAAO,SAAC/D,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa6C,EAAmB,EAAnBA,aAEjC/B,EAAWd,IACX8C,EAAYD,IACZrC,EAAUT,IAAWe,SAASN,QAC9BiE,EAAW1E,IAAWe,SAASb,KAAKe,IACpC4E,EAAOhC,EAAYE,MAErB8B,GACAhF,QAAQC,IAAI+E,GACO9E,EAASoD,UAAUC,IAAnB,iBAAiCyB,EAAKC,OAC3BC,IAAIF,GACvBG,GACP,iBACA,SAAAC,OACA,SAAAzD,GACI3B,QAAQC,IAAI0B,MAEhB,WACIzB,EAASoD,UACJC,IAAI,UACJ8B,MAAML,EAAKC,MACXK,iBACAhG,MAAK,SAAAiG,GACFvF,QAAQC,IAAIsF,GACZrD,EAAUG,WAAW,gBAAgBmD,IAArC,2BACOxC,GADP,IAEIE,MAAOqC,EACPlC,cAAe2B,EAAKC,KACpBf,gBAAiBtE,EAAQiC,UACzBsC,eAAgBvE,EAAQkC,SACxB+B,SAAUA,EACVE,UAAW,IAAI0B,QAChBnG,MAAK,WACJL,EAAS,CAAEM,KAAM,qBAAsByD,mBACxCtB,OAAM,SAACC,GACN1C,EAAS,CAAEM,KAAM,2BAA4BoC,oBAMjEO,EAAUG,WAAW,gBAAgBmD,IAArC,2BACOxC,GADP,IAEIE,MAAO,KACPgB,gBAAiBtE,EAAQiC,UACzBsC,eAAgBvE,EAAQkC,SACxB+B,SAAUA,EACVE,UAAW,IAAI0B,QAChBnG,MAAK,WACJL,EAAS,CAAEM,KAAM,qBAAsByD,mBACxCtB,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,2BAA4B6D,YCwBVyB,CAAkB7B,QAItDhE,CAA6C0F,GC1EtDgB,E,4MACF3F,MAAQ,CACJa,GAAI,GACJ6C,MAAO,GACPC,QAAS,GACTiC,SAAU,KACVC,cAAe,KACfvC,cAAe,I,EA+BnB7C,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhC8D,YAAc,SAAAlE,GACNA,EAAEE,OAAOiE,OAASnE,EAAEE,OAAOiE,MAAM,GACjC,EAAKlE,SAAS,CACViF,SAAUlF,EAAEE,OAAOiE,MAAM,GACzBgB,cAAeC,IAAIC,gBAAgBrF,EAAEE,OAAOiE,MAAM,MAGtD,EAAKlE,SAAS,CACViF,SAAU,KACVC,cAAe,uB,EAM3B9E,aAAe,SAACL,GACZA,EAAEM,iBADgB,MAEY,EAAKvB,MAA3BH,EAFU,EAEVA,KAAM2D,EAFI,EAEJA,YACV3D,EAAKe,MAAQ4C,EAAYa,WACzB,EAAKrE,MAAMuG,gBAAgB,EAAKhG,OAChC,EAAKP,MAAM8E,QAAQC,KAAK,O,0EAtDH,IAAD,EACetD,KAAKzB,MAApCmD,EADgB,EAChBA,cAAeK,EADC,EACDA,YACnBL,GAAiBK,GACjB/B,KAAKP,SAAS,CACVE,GAAI+B,EACJc,MAAOT,EAAYS,MACnBC,QAASV,EAAYU,QACrBiC,SAAU3C,EAAYE,MACtB0C,cAAe5C,EAAYE,MAC3BG,cAAeL,EAAYK,kB,gDAKb2C,GAAY,IAC1BrD,EAA+BqD,EAA/BrD,cAAeK,EAAgBgD,EAAhBhD,YACnBL,GAAiBK,GACjB/B,KAAKP,SAAS,CACVE,GAAI+B,EACJc,MAAOT,EAAYS,MACnBC,QAASV,EAAYU,QACrBiC,SAAU3C,EAAYE,MACtB0C,cAAe5C,EAAYE,MAC3BG,cAAeL,EAAYK,kB,+BAmC7B,IAAD,EACkDpC,KAAKlB,MAAtD0D,EADD,EACCA,MAAOC,EADR,EACQA,QAASkC,EADjB,EACiBA,cAAevC,EADhC,EACgCA,cAErC,OADiBpC,KAAKzB,MAAdH,KACEe,KACVJ,QAAQC,IAAIgB,KAAKlB,MAAM4F,UAEnB,yBAAKlG,UAAU,aACX,0BAAM0B,SAAUF,KAAKH,aAAcrB,UAAU,gCACzC,uCACA,yBAAKA,UAAU,eACX,2BAAO2B,QAAQ,QAAQ3B,UAAWgE,EAAQ,SAAW,MAArD,SACA,2BACIlE,KAAK,OACLqB,GAAG,QACHC,MAAO4C,EACPpC,SAAUJ,KAAKT,gBAGvB,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,UAAU3B,UAAWiE,EAAU,SAAW,MAAzD,mBACA,8BACI9C,GAAG,UACHnB,UAAU,uBACVoB,MAAO6C,EACPrC,SAAUJ,KAAKT,gBAGvB,yBAAKf,UAAU,8BACVmG,EAAgB,yBAAKjC,IAAKiC,EAAehC,IAAKP,EAAe5D,UAAU,WAAc,MAG1F,yBAAKA,UAAU,gCACX,yBAAKqF,MAAM,OACP,8CACA,2BAAOlE,GAAG,QAAQrB,KAAK,OAAOwF,OAAO,UAAU1D,SAAUJ,KAAK0D,eAElE,yBAAKG,MAAM,qBACP,2BAAOA,MAAM,qBAAqBvF,KAAK,WAI/C,yBAAKE,UAAU,kBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,UACA,4BAAQA,UAAU,gCAAlB,YAxCM,kBAAC,IAAD,CAAUC,GAAG,gB,GAvEb4B,aAwIfmB,cACXzD,aAlBoB,SAACe,EAAO2C,GAC5B,IAAMC,EAAgBD,EAASE,MAAMC,OAAOjC,GACtCkC,EAAe/C,EAAMmC,UAAUa,KAAKD,aACpCE,EAAcF,EAAeA,EAAaH,GAAiB,KACjE,MAAO,CACHtD,KAAMU,EAAMG,SAASb,KACrB2D,YAAaA,EACbL,cAAeA,MAII,SAAC1D,GACxB,MAAO,CACH8G,gBAAiB,SAAC/C,GAAD,OAAiB/D,EF/EX,SAAC+D,GAC5B,OAAO,SAAC/D,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa6C,EAAmB,EAAnBA,aACjC/B,EAAWd,IACX8C,EAAYD,IACZoB,EAAgBL,EAAYK,cAC5B4C,EAAejD,EAAY2C,SAIjC,GAHA3F,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIgG,GAERA,GAA6C,qBAAtBA,EAAahB,KACpCjF,QAAQC,IAAI,UACZiC,EAAUG,WAAW,gBAAgBC,IAAIU,EAAYpC,IAAIsF,OAAO,CAC5DzC,MAAOT,EAAYS,MACnBC,QAASV,EAAYU,UACtBpE,MAAK,WACJL,EAAS,CAAEM,KAAM,mBAAoByD,mBACtCtB,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,yBAA0B6D,gBAE5C,GAAI6C,GAAgBA,EAAahB,OAAS5B,EAAe,CAC5DrD,QAAQC,IAAI,UACZ,IAAMkG,EAAWjG,EAASoD,UAAUC,IAAnB,iBAAiCF,IAClD8C,EAASb,iBAAiBhG,MAAK,SAAAiG,GAC3BY,EAAShD,SAAS7D,MAAK,WACnBU,QAAQC,IAAI,iCAEjByB,OAAM,SAAA0B,GACLpD,QAAQC,IAAI,kCAGIC,EAASoD,UAAUC,IAAnB,iBAAiC0C,EAAahB,OACnCC,IAAIe,GACxBd,GACP,iBACA,SAAAC,OACA,SAAAzD,GACI3B,QAAQC,IAAI0B,MAEhB,WACIzB,EAASoD,UACJC,IAAI,UACJ8B,MAAMY,EAAahB,MACnBK,iBACAhG,MAAK,SAAAiG,GACFrD,EAAUG,WAAW,gBAAgBC,IAAIU,EAAYpC,IAAIsF,OAAO,CAC5DzC,MAAOT,EAAYS,MACnBC,QAASV,EAAYU,QACrBR,MAAOqC,EACPlC,cAAe4C,EAAahB,OAC7B3F,MAAK,WACJL,EAAS,CAAEM,KAAM,mBAAoByD,mBACtCtB,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,yBAA0B6D,qBAK5D,CACHpD,QAAQC,IAAI,UAEZ,IAAMkG,EAAWjG,EAASoD,UAAUC,IAAnB,iBAAiCF,IAClD8C,EAASb,iBAAiBhG,MAAK,SAAA8G,GAC3BD,EAAShD,SAAS7D,MAAK,WACnBU,QAAQC,IAAI,iCAEjByB,OAAM,SAAA0B,GACLpD,QAAQC,IAAI,kCAGhBiC,EAAUG,WAAW,gBAAgBC,IAAIU,EAAYpC,IAAIsF,OAAO,CAC5DzC,MAAOT,EAAYS,MACnBC,QAASV,EAAYU,QACrBR,MAAO,KACPG,cAAe,sBAChB/D,MAAK,WACJL,EAAS,CAAEM,KAAM,mBAAoByD,mBACtCtB,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,yBAA0B6D,aEER2C,CAAgB/C,SAM/DQ,2BAAiB,CACb,CAAEnB,WAAY,kBAHPI,CAKbiD,GC7FajD,cACXzD,aAtBoB,SAACe,EAAO2C,GAC5B,IAAMC,EAAgBD,EAASM,YAAYpC,GACrCyF,EAAYtG,EAAMmC,UAAUoE,QAAQD,UACtCE,GAAgB,EAEpB,GAAIF,GAAaA,EAAUG,OAAS,EAAG,CACnC,IAAMC,EAAWJ,EAAUK,QAAO,SAAAD,GAC9B,OAAOA,EAAS9D,gBAAkBA,KAElC8D,GAAYJ,EAAUG,OAAS,GAC/BC,EAASE,KAAI,SAAAC,GACT,OAAOL,GAAgB,KAKnC,MAAO,CACHA,cAAeA,MAMnB/C,2BAAiB,CACb,CACInB,WAAY,eAJTI,EAjDY,SAAC,GAA6C,IAA3CO,EAA0C,EAA1CA,YAAa6D,EAA6B,EAA7BA,QAASN,EAAoB,EAApBA,cAChDvG,QAAQC,IAAIsG,GAaZ,OACI,yBAAK9G,UAAU,sCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,8BAA8BuD,EAAYS,OACzDoD,IAAYN,EAAgB,wBAAI9G,UAAU,kBAAd,6GAAgJ,KAC7K,yBAAKA,UAAU,SAhBnBoH,GAAWA,IAAY7D,EAAYa,SAE/B,4CAIA,0CAAgBb,EAAYkB,gBAA5B,IAA8ClB,EAAYmB,gBAYtD,uBAAG1E,UAAU,aAAaqE,IAAOd,EAAYe,UAAUC,UAAUC,kBCkBtE6C,EAzCS,SAAC,GAA+B,IAA7BhE,EAA4B,EAA5BA,aAAc+D,EAAc,EAAdA,QAErC,OAAI/D,GAAgBA,EAAa0D,OAAS,EAElC,yBAAK/G,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,WAEPqD,EAAa6D,KAAI,SAAA3D,GACb,OACI,kBAAC,IAAD,CAAMtD,GAAI,gBAAkBsD,EAAYpC,GAAImG,IAAK/D,EAAYpC,IACzD,kBAAC,EAAD,CAAoBoC,YAAaA,EAAa6D,QAASA,WAU/E/D,GAAwC,IAAxBA,EAAa0D,OAUjC,yBAAK/G,UAAU,oBACX,sDATJ,yBAAKA,UAAU,+BACX,kEACA,2D,iBCtBVuH,E,kDACF,WAAYxH,GAAQ,IAAD,8BACf,cAAMA,IASVyH,gBAAkB,WAAO,IAAD,EACwB,EAAKzH,MAAzCsD,EADY,EACZA,aAAcoE,EADF,EACEA,OAAQb,EADV,EACUA,UACtBc,EAAU,EAAKpH,MAAfoH,MACFC,EAAiBtE,EAAaqE,GAGpC,GAFAnH,QAAQC,IAAImH,IAEG,IAAXF,GAAmBE,EAAgB,CACnCpH,QAAQC,IAAI,OACZ,EAAKS,SAAS,CACVoC,aAAa,GAAD,mBACL,EAAK/C,MAAM+C,cADN,CAERsE,IAEJD,MAAOA,EAAQ,EACfxE,cAAeyE,EAAexG,KAG9BuG,IAAUrE,EAAa0D,OAAS,GAChC,EAAK9F,SAAS,CACVyG,MAAO,EACPE,UAAU,IAIlB,IAAMZ,EAAWJ,EAAUK,QAAO,SAAAD,GAC9B,OAAOA,EAAS9D,gBAAkByE,EAAexG,MAGjD6F,GAAYA,EAASD,OAAS,GAC9B,EAAKhH,MAAM8H,gBACX,EAAK5G,SAAS,CACV6G,cAAc,MAGlB,EAAK/H,MAAMgI,mBACX,EAAK9G,SAAS,CACV6G,cAAc,KAGtB,EAAK/H,MAAMiI,gBAAgBL,QAExB,GAAKA,EAKL,CACH,IAAMM,EAAQ,EAAKlI,MAAMkI,MACzB1H,QAAQC,IAAI,4BACZyH,EAAMC,KAAK,uCARa,CACV,EAAKnI,MAAMkI,MACnBC,KAAK,+BArDA,EAgEnBC,aAAe,SAAC5E,GACZ,EAAKxD,MAAMoI,eACX,EAAKpI,MAAMiI,gBAAgBzE,IAlEZ,EAqEnB6E,eAAiB,WACb,EAAKrI,MAAMqI,kBApEX,EAAK9H,MAAQ,CACToH,MAAO,EACPrE,aAAc,GACduE,UAAU,EACVE,cAAc,GANH,E,qDAyET,IAAD,OACGL,EAAWjG,KAAKzB,MAAhB0H,OACRlH,QAAQC,IAAIiH,GAFP,MAG4CjG,KAAKlB,MAA9C+C,EAHH,EAGGA,aAAcuE,EAHjB,EAGiBA,SAAUE,EAH3B,EAG2BA,aAEhC,OADAvH,QAAQC,IAAIsH,GAER,yBAAK9H,UAAU,wBACX,yBAAKA,UAAU,WAEPqD,GAAgBA,EAAa6D,KAAI,SAAA3D,GAC7B,OACI,yBAAKvD,UAAU,OAAOsH,IAAK/D,EAAYpC,GAAIjB,QAAS,kBAAM,EAAKiI,aAAa5E,KACxE,kBAAC,EAAD,CAAoBA,YAAaA,SAQrD,4BAAQqE,SAAUA,GAAsB,KAAM5H,UAAU,wCAAwCE,QAASsB,KAAKgG,iBAA9G,mBACC,uBAAGxH,UAAU,mBAAb,mBAGD,4BAAQ4H,SAAUE,GAA8B,KAAM9H,UAAU,8CAA8CE,QAASsB,KAAK4G,gBAA5H,sB,GAlGavG,aAkHdmB,cACXqF,cACA9I,aAToB,SAACe,EAAO2C,GAE5B,MAAO,CACH2D,UAFctG,EAAMmC,UAAUoE,QAAQD,cAS1C7C,2BAAiB,CACb,CACInB,WAAY,eALTI,CAQbuE,GCzGae,EAtBO,SAACvI,GAAW,IACtBwD,EAAgBxD,EAAhBwD,YAKR,OACI,yBAAKvD,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,4BACX,0BAAMA,UAAU,uCAAuCuD,EAAYS,OACnE,uBAAGhE,UAAU,SAASuD,EAAYU,SACjCV,EAAYE,MAAQ,yBAAKS,IAAKX,EAAYE,MAAOU,IAAKZ,EAAYK,gBAAoB,MAE3F,yBAAK5D,UAAU,iDACX,4BAAQA,UAAU,+BAA+BE,QAb5C,WACjBH,EAAMoI,iBAYM,YCZdI,E,kDACF,WAAYxI,GAAQ,IAAD,8BACf,cAAMA,IAQVqI,eAAiB,WACb,EAAKrI,MAAMqI,kBAVI,EAanBI,mBAAqB,SAAAxH,GACjB,IAAMyH,EAAiBzH,EAAEE,OAAOE,MACxB4F,EAAa,EAAKjH,MAAlBiH,SACR,EAAK/F,SAAS,CACVwH,eAAgBA,EAChBhB,OAAQT,GAAYA,EAASE,KAAI,SAAAC,GAC7B,SAAIA,GAAQsB,IAAmBtB,EAAKuB,mBAnB7B,EA4BnBrH,aAAe,SAAAL,GACXA,EAAEM,iBAEFf,QAAQC,IAAI,sBAAuB,EAAKF,MAAMmI,gBAG9ClI,QAAQC,IAAI,EAAKF,MAAMmH,QACvB,EAAK1H,MAAM4I,SAAS,EAAKrI,MAAMmH,QAC/B,EAAK1H,MAAMqI,kBAlCX,EAAK9H,MAAQ,CACT0G,SAAU,GACVyB,eAAgB,GAChBhB,QAAQ,GALG,E,qDAuCT,IAAD,SAC6BjG,KAAKzB,MAA/BiH,EADH,EACGA,SAAUzD,EADb,EACaA,YAClBhD,QAAQC,IAAIgB,KAAKlB,MAAMmH,QACvB,IAAMmB,EAAqB5B,GAAYA,EAASE,KAAI,SAAAC,GAChD,OAAIA,EAGI,yBAAKnH,UAAU,UAAUsH,IAAKN,EAAS7F,IACnC,yBAAKnB,UAAU,kBACX,0BAAM0B,SAAU,EAAKL,cACjB,yBAAKrB,UAAU,4BACX,0BAAMA,UAAU,uCAAuCuD,EAAYS,OAEnE,4BAAKgD,EAASA,UACd,4BACI,+BACI,2BAAOhH,UAAU,WAAWwF,KAAK,SAAS1F,KAAK,QAAQsB,MAAO+F,EAAKuB,YAAa9G,SAAU,EAAK4G,qBAC/F,8BAAOrB,EAAKuB,eAGpB,4BACI,+BACI,2BAAO1I,UAAU,WAAWwF,KAAK,SAAS1F,KAAK,QAAQsB,MAAO+F,EAAK0B,QAASjH,SAAU,EAAK4G,qBAC3F,8BAAOrB,EAAK0B,WAGpB,4BACI,+BACI,2BAAO7I,UAAU,WAAWwF,KAAK,SAAS1F,KAAK,QAAQsB,MAAO+F,EAAK2B,QAASlH,SAAU,EAAK4G,qBAC3F,8BAAOrB,EAAK2B,WAGpB,4BACI,+BACI,2BAAO9I,UAAU,WAAWwF,KAAK,SAAS1F,KAAK,QAAQsB,MAAO+F,EAAK4B,QAASnH,SAAU,EAAK4G,qBAC3F,8BAAOrB,EAAK4B,YAKxB,yBAAK/I,UAAU,YACX,4BAAQA,UAAU,+BAA+BE,QAAS,EAAKkI,gBAA/D,QACA,4BAAQpI,UAAU,gCAAlB,cAQb,yBAAKsH,IAAI,eAAT,2BAMf,OACI,6BACKsB,O,GAlGY/G,aAmHdmB,cACXzD,aAZoB,SAACe,EAAO2C,GAC5B,IAAM2D,EAAYtG,EAAMmC,UAAUoE,QAAQD,UACpC1D,EAAgBD,EAASM,YAAYpC,GAI3C,MAAO,CACH6F,SAJaJ,EAAUK,QAAO,SAAAD,GAC9B,OAAOA,EAAS9D,gBAAkBA,SAStCa,2BAAiB,CACb,CACInB,WAAY,eAJTI,CAObuF,GCtHIS,E,kDACF,WAAYjJ,GAAQ,IAAD,8BACf,cAAMA,IASVoI,aAAe,WAAO,IACVc,EAAe,EAAK3I,MAApB2I,WACR,EAAKhI,SAAS,CACVgI,YAAaA,KAbF,EAiBnBjB,gBAAkB,SAACzE,GACf,EAAKtC,SAAS,CACVsC,YAAaA,KAnBF,EAuBnB6E,eAAiB,WAAO,IACZc,EAAiB,EAAK5I,MAAtB4I,aACR,EAAKjI,SAAS,CACViI,cAAeA,KA1BJ,EA8BnBrB,cAAgB,WACZ,EAAK5G,SAAS,CAAEwG,QAAQ,KA/BT,EAkCnBkB,SAAW,SAACQ,GACR5I,QAAQC,IAAI2I,GACZA,EAAQjC,KAAI,SAAAO,GACR,OAAe,IAAXA,GACA,EAAKxG,SAAS,CAAEwG,QAAQ,KACjB,IAGP,EAAKxG,SAAS,CAAEwG,QAAQ,IACxBlH,QAAQC,IAAI,oBACL,OA5CA,EAiDnBuH,iBAAmB,WACf,EAAK9G,SAAS,CAAEwG,QAAQ,KAhDxB,EAAKnH,MAAQ,CACT2I,YAAY,EACZ1F,YAAa,GACb2F,cAAc,EACdzB,QAAQ,GANG,E,qDAqDT,IAAD,EAC0BjG,KAAKzB,MAA5BsD,EADH,EACGA,aAAczD,EADjB,EACiBA,KADjB,EAEqD4B,KAAKlB,MAAvD2I,EAFH,EAEGA,WAAY1F,EAFf,EAEeA,YAAa2F,EAF5B,EAE4BA,aAAczB,EAF1C,EAE0CA,OAC/C,OACI,yBAAKzH,UAAWiJ,EAAa,qBAAuB,aAChD,yBAAKjJ,UAAWiJ,GAAcC,EAAe,gBAAkB,OAEvDtJ,EAAKe,IACD,kBAAC,EAAD,CAAiB0C,aAAcA,EAAc+D,QAASxH,EAAKe,MAC3D,kBAAC,EAAD,CACI0C,aAAcA,EACd8E,aAAc3G,KAAK2G,aACnBH,gBAAiBxG,KAAKwG,gBACtBI,eAAgB5G,KAAK4G,eACrBgB,gBAAiB5H,KAAK4H,gBACtB3B,OAAQA,EACRI,cAAerG,KAAKqG,cACpBwB,cAAe7H,KAAK6H,cACpBtB,iBAAkBvG,KAAKuG,oBAKvC,yBAAK/H,UAAWiJ,EAAa,QAAU,MAClCA,EAAa,kBAAC,EAAD,CAAe1F,YAAaA,EAAa4E,aAAc3G,KAAK2G,eAAmB,MAGjG,yBAAKnI,UAAWkJ,EAAe,QAAU,MAEjCA,EACI,kBAAC,EAAD,CACI3F,YAAaA,EACb6E,eAAgB5G,KAAK4G,eACrBO,SAAUnH,KAAKmH,WACd,W,GAxFF9G,aAuGhBmB,cACXzD,aARoB,SAACe,EAAO2C,GAC5B,MAAO,CACHI,aAAc/C,EAAMmC,UAAUoE,QAAQxD,aACtCzD,KAAMU,EAAMG,SAASb,SAMzBmE,2BAAiB,CACb,CACInB,WAAY,kBAJTI,CAObgG,GClHIM,E,4MACFhJ,MAAQ,CACJ0G,SAAU,GACV0B,YAAa,GACbG,QAAS,GACTC,QAAS,GACTC,QAAS,I,EAIbhI,aAAe,SAAAC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhCC,aAAe,SAAAL,GACXA,EAAEM,iBADc,MAEoB,EAAKvB,MAAjCmD,EAFQ,EAERA,cAAekB,EAFP,EAEOA,SACvB,EAAKrE,MAAMwJ,YAAY,EAAKjJ,MAAO4C,EAAekB,GAClD,EAAKrE,MAAM8E,QAAQC,KAAK,M,uDAGlB,IAAD,EACsBtD,KAAKzB,MAAxBH,EADH,EACGA,KAAMwE,EADT,EACSA,SACd,OAAKxE,EAAKe,IACNf,EAAKe,MAAQyD,EAAiB,kBAAC,IAAD,CAAUnE,GAAG,MAE3C,yBAAKD,UAAU,aACX,0BAAM0B,SAAUF,KAAKH,aAAcrB,UAAU,SACzC,wBAAIA,UAAU,2BAAd,gBAEA,yBAAKA,UAAU,eACX,2BAAO2B,QAAQ,YAAf,YACA,2BAAO7B,KAAK,OAAOqB,GAAG,WAAWS,SAAUJ,KAAKT,gBAGpD,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,eAAf,gBACA,8BAAUR,GAAG,cAAcnB,UAAU,uBAAuB4B,SAAUJ,KAAKT,gBAG/E,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,WAAf,YACA,8BAAUR,GAAG,UAAUnB,UAAU,uBAAuB4B,SAAUJ,KAAKT,gBAG3E,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,WAAf,YACA,8BAAUR,GAAG,UAAUnB,UAAU,uBAAuB4B,SAAUJ,KAAKT,gBAG3E,yBAAKf,UAAU,eACX,2BAAO2B,QAAQ,WAAf,YACA,8BAAUR,GAAG,UAAUnB,UAAU,uBAAuB4B,SAAUJ,KAAKT,gBAG3E,yBAAKf,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,QACA,4BAAQA,UAAU,gCAAlB,aAlCM,kBAAC,IAAD,CAAUC,GAAG,gB,GAzBjB4B,aAmFXtC,eAhBS,SAACe,EAAO2C,GAC5B,IAAMC,EAAgBD,EAASE,MAAMC,OAAOjC,GACtCiD,EAAWnB,EAASE,MAAMC,OAAOgB,SACvC,MAAO,CACHxE,KAAMU,EAAMG,SAASb,KACrBsD,cAAeA,EACfkB,SAAUA,MAIS,SAAA5E,GACvB,MAAO,CACH+J,YAAa,SAACvC,EAAU9D,EAAekB,GAA1B,OAAuC5E,ECpFjC,SAACwH,EAAU9D,EAAekB,GACjD,OAAO,SAAC5E,EAAUE,EAAX,GAAuD,EAAhCC,aACR6C,EADwC,EAAnBA,gBAE7BI,WAAW,aAAamD,IAAlC,2BACOiB,GADP,IAEI9D,cAAeA,EACfkB,SAAUA,KACXvE,MAAK,WACJL,EAAS,CAAEM,KAAM,eAAgBkH,gBAClC/E,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,qBAAsB6D,YD0EkB4F,CAAYvC,EAAU9D,EAAekB,QAI3F7E,CAA6C+J,GEX7CtG,cACXzD,aArBoB,SAACe,EAAO2C,GAC5B,IAAMC,EAAgBD,EAASE,MAAMC,OAAOjC,GAC5CZ,QAAQC,IAAI0C,GACZ,IAEI8D,EAFEhD,EAAQf,EAASE,MAAMC,OAAOY,MAC9B4C,EAAYtG,EAAMmC,UAAUoE,QAAQD,UAQ1C,OANIA,GAAaA,EAAUG,OAAS,IAChCC,EAAWJ,EAAUK,QAAO,SAAAD,GACxB,OAAOA,EAAS9D,gBAAkBA,MAInC,CACHtD,KAAMU,EAAMG,SAASb,KACrBoE,MAAOA,EACPd,cAAeA,EACf8D,SAAUA,MAMdjD,2BAAiB,CACb,CACInB,WAAY,eAJTI,EAvES,SAACjD,GAAW,IACxBiH,EAAyCjH,EAAzCiH,SAAU9D,EAA+BnD,EAA/BmD,cAAec,EAAgBjE,EAAhBiE,MACjC,IADiDjE,EAATH,KAC9Be,IAAK,OAAO,kBAAC,IAAD,CAAUV,GAAG,YAiCnC,OACI,yBAAKD,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,uCAAuCgE,GAnCnEgD,GAAYA,EAASD,OAAS,EACvBC,EAASE,KAAI,SAAAC,GAChB,OAAIA,GACA5G,QAAQC,IAAI,OACZD,QAAQC,IAAI2G,GAER,kBAAC,IAAD,CAAMlH,GAAI,gBAAkBiD,EAAgB,IAAMc,EAAQ,aAAemD,EAAKhG,GAAK,QAASmG,IAAKH,EAAKhG,IAClG,yBAAKnB,UAAU,cACX,yBAAKA,UAAU,wCACX,wBAAIA,UAAU,QAAQmH,EAAKH,UAC3B,yBAAKhH,UAAU,SACX,4BAAI,0BAAMA,UAAU,QAAhB,cAAJ,SAAoD,0BAAMA,UAAU,UAAUmH,EAAK0B,UACnF,4BAAI,0BAAM7I,UAAU,QAAhB,cAAJ,SAAoD,0BAAMA,UAAU,UAAUmH,EAAK2B,UACnF,4BAAI,0BAAM9I,UAAU,QAAhB,cAAJ,SAAoD,0BAAMA,UAAU,UAAUmH,EAAK4B,UACnF,4BAAI,0BAAM/I,UAAU,QAAhB,kBAAJ,SAAwD,0BAAMA,UAAU,mBAAmBmH,EAAKuB,mBAQ7G,wBAAI1I,UAAU,eAAesH,IAAI,eAAjC,kDAIR,wBAAItH,UAAU,gBAAd,+CAWK,kBAAC,IAAD,CAAMC,GAAI,gBAAkBiD,EAAelD,UAAU,sCAArD,eCxClBwJ,E,4MACFlJ,MAAQ,CACJ0G,SAAU,GACV0B,YAAa,GACbG,QAAS,GACTC,QAAS,GACTC,QAAS,I,EA6BbhI,aAAe,SAAAC,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhCC,aAAe,SAAAL,GACXA,EAAEM,iBADc,MAE6B,EAAKvB,MAA1C0J,EAFQ,EAERA,WAAYvG,EAFJ,EAEIA,cAAec,EAFnB,EAEmBA,MACnC,EAAKjE,MAAM2J,aAAa,EAAKpJ,MAAOmJ,GACpC,EAAK1J,MAAM8E,QAAQC,KAAnB,uBAAwC5B,EAAxC,YAAyDc,EAAzD,e,EAGJe,SAAW,WAAO,IAAD,EAC0B,EAAKhF,MAApC0J,EADK,EACLA,WAAYzC,EADP,EACOA,SADP,EACiBpH,KACrBe,MAAQqG,EAAS5C,UAClBO,OAAOC,QAAQ,uCACf,EAAK7E,MAAM4J,eAAe3C,EAAUyC,GACpC,EAAK1J,MAAM8E,QAAQC,KAAK,O,0EA5CP,IACjBkC,EAAaxF,KAAKzB,MAAlBiH,SACJA,GACAxF,KAAKP,SAAS,CACV+F,SAAUA,EAASA,SACnB0B,YAAa1B,EAAS0B,YACtBG,QAAS7B,EAAS6B,QAClBC,QAAS9B,EAAS8B,QAClBC,QAAS/B,EAAS+B,Y,gDAKJxC,GAAY,IAC1BS,EAAaT,EAAbS,SACJA,GACAxF,KAAKP,SAAS,CACV+F,SAAUA,EAASA,SACnB0B,YAAa1B,EAAS0B,YACtBG,QAAS7B,EAAS6B,QAClBC,QAAS9B,EAAS8B,QAClBC,QAAS/B,EAAS+B,Y,+BA4BpB,IAAD,EACkCvH,KAAKzB,MAApCH,EADH,EACGA,KAAMsD,EADT,EACSA,cAAec,EADxB,EACwBA,MADxB,EAEwDxC,KAAKlB,MAA1D0G,EAFH,EAEGA,SAAU0B,EAFb,EAEaA,YAAaG,EAF1B,EAE0BA,QAASC,EAFnC,EAEmCA,QAASC,EAF5C,EAE4CA,QACjD,OAAKnJ,EAAKe,IAEN,yBAAKX,UAAU,aACX,0BAAM0B,SAAUF,KAAKH,aAAcrB,UAAU,SACzC,wBAAIA,UAAU,2BAAd,oBAEA,yBAAKA,UAAU,eACX,2BAAO2B,QAAQ,WAAW3B,UAAWgH,EAAW,SAAW,MAA3D,YACA,2BACIlH,KAAK,OACLqB,GAAG,WACHS,SAAUJ,KAAKT,aACfK,MAAO4F,KAIf,yBAAKhH,UAAU,eACX,2BAAO2B,QAAQ,cAAc3B,UAAW0I,EAAc,SAAW,MAAjE,gBACA,8BACIvH,GAAG,cACHnB,UAAU,uBACV4B,SAAUJ,KAAKT,aACfK,MAAOsH,KAIf,yBAAK1I,UAAU,eACX,2BAAO2B,QAAQ,UAAU3B,UAAW6I,EAAU,SAAW,MAAzD,YACA,8BACI1H,GAAG,UACHnB,UAAU,uBACV4B,SAAUJ,KAAKT,aACfK,MAAOyH,KAIf,yBAAK7I,UAAU,eACX,2BAAO2B,QAAQ,UAAU3B,UAAW8I,EAAU,SAAW,MAAzD,YACA,8BACI3H,GAAG,UACHnB,UAAU,uBACV4B,SAAUJ,KAAKT,aACfK,MAAO0H,KAIf,yBAAK9I,UAAU,eACX,2BAAO2B,QAAQ,UAAU3B,UAAW+I,EAAU,SAAW,MAAzD,YACA,8BACI5H,GAAG,UACHnB,UAAU,uBACV4B,SAAUJ,KAAKT,aACfK,MAAO2H,KAIf,yBAAK/I,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAI,gBAAkBiD,EAAgB,IAAMc,EAAQ,YAAahE,UAAU,gCAAjF,UACA,6BACI,4BAAQA,UAAU,qCAAqCE,QAASsB,KAAKuD,UAArE,mBACA,4BAAQ/E,UAAU,+BAA+BF,KAAK,UAAtD,YA5DE,kBAAC,IAAD,CAAUG,GAAG,gB,GA7DhB4B,aAyJZmB,cACXzD,aAxBoB,SAACe,EAAO2C,GAC5B,IAAMwG,EAAaxG,EAASE,MAAMC,OAAOwG,OACnC1G,EAAgBD,EAASE,MAAMC,OAAOyG,UACtC7F,EAAQf,EAASE,MAAMC,OAAOY,MAC9B4C,EAAYtG,EAAMmC,UAAUa,KAAKsD,UACjCI,EAAWJ,EAAYA,EAAU6C,GAAc,KAErD,MAAO,CACH7J,KAAMU,EAAMG,SAASb,KACrBoH,SAAUA,EACVyC,WAAYA,EACZvG,cAAeA,EACfc,MAAOA,MAIY,SAACxE,GACxB,MAAO,CACHkK,aAAc,SAAC1C,EAAUyC,GAAX,OAA0BjK,EF7IpB,SAACwH,EAAUyC,GACnC,OAAO,SAACjK,EAAUE,EAAX,GAAuD,EAAhCC,aACR6C,EADwC,EAAnBA,gBAE7BI,WAAW,aAAaC,IAAI4G,GAAYhD,OAAlD,eACOO,IACJnH,MAAK,WACJL,EAAS,CAAEM,KAAM,gBAAiBkH,gBACnC/E,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,sBAAuB6D,YEqIK+F,CAAa1C,EAAUyC,KACxEE,eAAgB,SAAC3C,EAAUyC,GAAX,OAA0BjK,EFjIpB,SAACwH,EAAUyC,GACrC,OAAO,SAACjK,EAAUE,EAAX,GAAuD,EAAhCC,aACR6C,EADwC,EAAnBA,gBAGlCI,WAAW,aACXC,IAAI4G,GACJ/F,SACA7D,MAAK,WACFL,EAAS,CAAEM,KAAM,kBAAmB2J,kBACrCxH,OAAM,SAAA0B,GACLnE,EAAS,CAAEM,KAAM,wBAAyB6D,YEuHCgG,CAAe3C,EAAUyC,SAMhF1F,2BAAiB,CACb,CACInB,WAAY,eAJTI,CAObwG,GCtIaM,MArBf,WACI,OACI,kBAAC,IAAD,KACI,yBAAK9J,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+J,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWrJ,IACjC,kBAAC,IAAD,CAAOoJ,KAAK,UAAUC,UAAW9H,IACjC,kBAAC,IAAD,CAAO4H,OAAK,EAACC,KAAK,mBAAmBC,UAAWE,IAChD,kBAAC,IAAD,CAAOH,KAAK,UAAUC,UAAWhF,IACjC,kBAAC,IAAD,CAAO+E,KAAK,wBAAwBC,UAAWhE,IAC/C,kBAAC,IAAD,CAAO+D,KAAK,yCAAyCC,UAAWX,IAChE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,mCAAmCC,UAAWG,IAChE,kBAAC,IAAD,CAAOJ,KAAK,uDAAuDC,UAAWT,QCf9Ea,QACW,cAA7B1F,OAAO2F,SAASC,UAEe,UAA7B5F,OAAO2F,SAASC,UAEhB5F,OAAO2F,SAASC,SAASpH,MACvB,2DClBN,IAAMqH,EAAY,CACd/I,UAAW,MAoCAgJ,EAjCK,WAAgC,IAA/BnK,EAA8B,uDAAtBkK,EAAWE,EAAW,uCAC/C,OAAQA,EAAO5K,MACX,IAAK,cAED,OADAS,QAAQC,IAAI,eACL,2BACAF,GADP,IAEImB,UAAW,iBAEnB,IAAK,gBAED,OADAlB,QAAQC,IAAI,iBACL,2BACAF,GADP,IAEImB,UAAW,OAEnB,IAAK,kBAED,OADAlB,QAAQC,IAAI,mBACLF,EACX,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACL,2BACAF,GADP,IAEImB,UAAW,OAEnB,IAAK,eAED,OADAlB,QAAQC,IAAI,gBACL,2BACAF,GADP,IAEImB,UAAWiJ,EAAOxI,MAAMyI,UAEhC,QAAS,OAAOrK,ICjClBkK,EAAY,GA0BHI,EAxBY,WAAgC,IAA/BtK,EAA8B,uDAAtBkK,EAAWE,EAAW,uCACtD,OAAQA,EAAO5K,MACX,IAAK,qBAED,OADAS,QAAQC,IAAI,qBAAsBkK,EAAOnH,aAClCjD,EACX,IAAK,2BAED,OADAC,QAAQC,IAAI,2BAA4BkK,EAAOxI,OACxC5B,EACX,IAAK,mBAED,OADAC,QAAQC,IAAI,qBAAsBkK,EAAOnH,aAClCjD,EACX,IAAK,yBAED,OADAC,QAAQC,IAAI,yBAA0BkK,EAAO/G,KACtCrD,EACX,IAAK,qBAED,OADAC,QAAQC,IAAI,sBAAuBkK,EAAOvJ,IACnCb,EACX,IAAK,2BAED,OADAC,QAAQC,IAAI,4BAA6BkK,EAAO/G,KACzCrD,EACX,QAAS,OAAOA,ICtBlBkK,EAAY,GA0BHK,GAxBS,WAAgC,IAA/BvK,EAA8B,uDAAtBkK,EAAWE,EAAW,uCACnD,OAAQA,EAAO5K,MACX,IAAK,eAED,OADAS,QAAQC,IAAI,eAAgBkK,EAAO1D,UAC5B1G,EACX,IAAK,qBAED,OADAC,QAAQC,IAAI,qBAAsBkK,EAAOxI,OAClC5B,EACX,IAAK,gBAED,OADAC,QAAQC,IAAI,qBAAsBkK,EAAO1D,UAClC1G,EACX,IAAK,sBAED,OADAC,QAAQC,IAAI,yBAA0BkK,EAAO/G,KACtCrD,EACX,IAAK,kBAED,OADAC,QAAQC,IAAI,sBAAuBkK,EAAOvJ,IACnCb,EACX,IAAK,wBAED,OADAC,QAAQC,IAAI,4BAA6BkK,EAAO/G,KACzCrD,EACX,QAAS,OAAOA,I,SCLTwK,GAVKC,YAAgB,CAChCnL,KAAM6K,EACNlH,YAAaqH,EACb5D,SAAU6D,GAEVpI,UAAWuI,oBAEXvK,SAAUwK,oB,mDCCdxK,KAASyK,cAVY,CACjBC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,eACnBC,MAAO,8CAIKhL,KAASoD,UAAzB,I,UCDM6H,GAAQC,YAAYb,GACxB9H,YACE4I,YAAgBC,KAAMC,kBAAkB,CAAEnM,0BAAa6C,gCACvDuJ,0BAAeC,MACfC,6BAAmBD,KAAU,CAAEE,wBAAwB,EAAMC,YAAa,QAASC,mBAAmB,MAKpGC,GAAU,CAEdC,SAAUC,IAAUC,WACpBC,QAAS,IACTC,OAAQ,OAERC,WAAYC,IAAYC,OAG1BnB,GAAMoB,oBAAoBjN,MAAK,WAC7BkN,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAUvB,MAAOA,IACf,kBAAC,IAAD,eAAewB,SAAUC,MAAmBd,IAC1C,kBAAC,EAAD,SAINe,SAASC,eAAe,SNyFtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3N,MAAK,SAAA4N,GACJA,EAAaC,gBAEdzL,OAAM,SAAAC,GACL3B,QAAQ2B,MAAMA,EAAMyI,iB","file":"static/js/main.270ddd41.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Instruction</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'LOGIN_ERROR', error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            console.log(resp)\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n                email: newUser.email,\r\n                password: newUser.password\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">theFirma</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: creds => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { deleteInstruction } from '../../store/actions/instructionActions'\r\n\r\nconst InstructionDetail = (props) => {\r\n    const { instruction, auth, instructionId } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    const onDelete = (instructionId, instruction) => {\r\n        if (auth.uid === instruction.authorId) {\r\n            if (window.confirm('Are you sure you want to delete ?')) {\r\n                props.deleteInstruction(instructionId, instruction)\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const onActionInstruction = () => {\r\n        if (auth.uid === instruction.authorId) {\r\n            return (\r\n                <div>\r\n                    <Link to={'/instruction/' + instructionId + '/edit'} className=\"btn teal lighten-1 z-depth-0 mr-30\" >Edit</Link>\r\n                    <Link to={'/instruction/' + instructionId + '-' + instruction.authorId + '/newQuestion'} className=\"btn teal lighten-1 z-depth-0 mr-30\" >Add Question</Link>\r\n                    <Link to={'/instruction/' + instructionId + '/' + instruction.title + '/question'} className=\"btn teal lighten-1 z-depth-0 mr-30\" >See Question</Link>\r\n                    <button className=\"btn teal lighten-1 z-depth-0\" onClick={() => onDelete(instructionId, instruction)}>Delete</button>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    const onAuthor = () => {\r\n        if (auth.uid && auth.uid === instruction.authorId) {\r\n            return (\r\n                <div>\r\n                    <div>Posted by You</div>\r\n                    <div>{moment(instruction.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            )\r\n        } else if (auth.uid) {\r\n            return (\r\n                <div>\r\n                    <div>Posted by {instruction.authorFirstName} {instruction.authorLastName}</div>\r\n                    <div>{moment(instruction.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    if (instruction) {\r\n        return (\r\n            <div className=\"container section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content flex-column\">\r\n                        <span className=\"card-title teal-text center heading\">{instruction.title}</span>\r\n                        <p className=\"mt-30\">{instruction.content}</p>\r\n                        {instruction.image ? <img src={instruction.image} alt={instruction.imageFileName} /> : null}\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text flex-row\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Back</Link>\r\n                        <span className=\"center\">\r\n                            {onAuthor()}\r\n                        </span>\r\n                        {onActionInstruction()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading instruction...</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.match.params.id\r\n    const instructions = state.firestore.data.instructions\r\n    const instruction = instructions ? instructions[instructionId] : null\r\n    return {\r\n        instruction: instruction,\r\n        auth: state.firebase.auth,\r\n        instructionId: instructionId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteInstruction: (instructionId, instruction) => dispatch(deleteInstruction(instructionId, instruction))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(InstructionDetail);","export const createInstruction = instruction => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        const file = instruction.image\r\n\r\n        if (file) {\r\n            console.log(file)\r\n            const storageRef = firebase.storage().ref(`images/${file.name}`)\r\n            const uploadTask = storageRef.put(file)\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                snapshot => { },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    firebase.storage()\r\n                        .ref(\"images\")\r\n                        .child(file.name)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            console.log(url)\r\n                            firestore.collection('instructions').add({\r\n                                ...instruction,\r\n                                image: url,\r\n                                imageFileName: file.name,\r\n                                authorFirstName: profile.firstName,\r\n                                authorLastName: profile.lastName,\r\n                                authorId: authorId,\r\n                                createdAt: new Date()\r\n                            }).then(() => {\r\n                                dispatch({ type: 'CREATE_INSTRUCTION', instruction })\r\n                            }).catch((error) => {\r\n                                dispatch({ type: 'CREATE_INSTRUCTION_ERROR', error })\r\n                            })\r\n                        })\r\n                }\r\n            )\r\n        } else {\r\n            firestore.collection('instructions').add({\r\n                ...instruction,\r\n                image: null,\r\n                authorFirstName: profile.firstName,\r\n                authorLastName: profile.lastName,\r\n                authorId: authorId,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({ type: 'CREATE_INSTRUCTION', instruction })\r\n            }).catch(err => {\r\n                dispatch({ type: 'CREATE_INSTRUCTION_ERROR', err })\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const editInstruction = (instruction) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        const imageFileName = instruction.imageFileName\r\n        const newImageFile = instruction.newImage\r\n        console.log(imageFileName)\r\n        console.log(newImageFile)\r\n\r\n        if (newImageFile && typeof newImageFile.name === 'undefined') {\r\n            console.log('case 1')\r\n            firestore.collection('instructions').doc(instruction.id).update({\r\n                title: instruction.title,\r\n                content: instruction.content\r\n            }).then(() => {\r\n                dispatch({ type: 'EDIT_INSTRUCTION', instruction })\r\n            }).catch(err => {\r\n                dispatch({ type: 'EDIT_INSTRUCTION_ERROR', err })\r\n            })\r\n        } else if (newImageFile && newImageFile.name !== imageFileName) {\r\n            console.log('case 2')\r\n            const imageRef = firebase.storage().ref(`images/${imageFileName}`)\r\n            imageRef.getDownloadURL().then(url => {\r\n                imageRef.delete().then(() => {\r\n                    console.log('delete image successful')\r\n                })\r\n            }).catch(err => {\r\n                console.log('There is no image to delete')\r\n            })\r\n\r\n            const newImageRef = firebase.storage().ref(`images/${newImageFile.name}`)\r\n            const uploadTask = newImageRef.put(newImageFile)\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                snapshot => { },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    firebase.storage()\r\n                        .ref(\"images\")\r\n                        .child(newImageFile.name)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            firestore.collection('instructions').doc(instruction.id).update({\r\n                                title: instruction.title,\r\n                                content: instruction.content,\r\n                                image: url,\r\n                                imageFileName: newImageFile.name\r\n                            }).then(() => {\r\n                                dispatch({ type: 'EDIT_INSTRUCTION', instruction })\r\n                            }).catch(err => {\r\n                                dispatch({ type: 'EDIT_INSTRUCTION_ERROR', err })\r\n                            })\r\n                        })\r\n                })\r\n\r\n        } else {\r\n            console.log('case 3')\r\n\r\n            const imageRef = firebase.storage().ref(`images/${imageFileName}`)\r\n            imageRef.getDownloadURL().then(Response => {\r\n                imageRef.delete().then(() => {\r\n                    console.log('delete image successful')\r\n                })\r\n            }).catch(err => {\r\n                console.log('There is no image to delete')\r\n            })\r\n\r\n            firestore.collection('instructions').doc(instruction.id).update({\r\n                title: instruction.title,\r\n                content: instruction.content,\r\n                image: null,\r\n                imageFileName: 'There is no image'\r\n            }).then(() => {\r\n                dispatch({ type: 'EDIT_INSTRUCTION', instruction })\r\n            }).catch(err => {\r\n                dispatch({ type: 'EDIT_INSTRUCTION_ERROR', err })\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteInstruction = (instructionId, instruction) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        const firebase = getFirebase()\r\n        console.log(instruction.image)\r\n        if (instruction.image === null) {\r\n            firestore\r\n                .collection('instructions')\r\n                .doc(instructionId)\r\n                .delete()\r\n                .then(() => {\r\n                    dispatch({ type: 'DELETE_INSTRUCTION', instructionId })\r\n                })\r\n                .catch(err => {\r\n                    dispatch({ type: 'DELETE_INSTRUCTION_ERROR', err })\r\n                })\r\n        } else {\r\n            const imageFileName = instruction.imageFileName\r\n            const imageRef = firebase.storage().ref(`images/${imageFileName}`)\r\n            imageRef.delete().then(() => {\r\n                firestore\r\n                    .collection('instructions')\r\n                    .doc(instructionId)\r\n                    .delete()\r\n                    .then(() => {\r\n                        dispatch({ type: 'DELETE_INSTRUCTION', instructionId })\r\n                    })\r\n                    .catch(err => {\r\n                        dispatch({ type: 'DELETE_INSTRUCTION_ERROR', err })\r\n                    })\r\n            })\r\n        }\r\n\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createInstruction } from '../../store/actions/instructionActions'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nclass CreateInstruction extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        image: null\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = e => {\r\n        if (e.target.files[0])\r\n            this.setState({\r\n                image: e.target.files[0]\r\n            })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.createInstruction(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Instruction</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Instruction Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"file-field input-field mt-30\">\r\n                        <div class=\"btn\">\r\n                            <span>Select image</span>\r\n                            <input id=\"image\" type=\"file\" accept=\"image/*\" onChange={this.handleImage} />\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-row\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Back</Link>\r\n                        <button className=\"btn teal lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createInstruction: instruction => dispatch(createInstruction(instruction))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateInstruction);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editInstruction } from '../../store/actions/instructionActions'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass EditInstruction extends Component {\r\n    state = {\r\n        id: '',\r\n        title: '',\r\n        content: '',\r\n        newImage: null,\r\n        imageOnChange: null,\r\n        imageFileName: '',\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const { instructionId, instruction } = this.props\r\n        if (instructionId && instruction) {\r\n            this.setState({\r\n                id: instructionId,\r\n                title: instruction.title,\r\n                content: instruction.content,\r\n                newImage: instruction.image,\r\n                imageOnChange: instruction.image,\r\n                imageFileName: instruction.imageFileName\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { instructionId, instruction } = nextProps\r\n        if (instructionId && instruction) {\r\n            this.setState({\r\n                id: instructionId,\r\n                title: instruction.title,\r\n                content: instruction.content,\r\n                newImage: instruction.image,\r\n                imageOnChange: instruction.image,\r\n                imageFileName: instruction.imageFileName\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            this.setState({\r\n                newImage: e.target.files[0],\r\n                imageOnChange: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        } else {\r\n            this.setState({\r\n                newImage: null,\r\n                imageOnChange: 'There is no image'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { auth, instruction } = this.props\r\n        if (auth.uid === instruction.authorId) {\r\n            this.props.editInstruction(this.state)\r\n            this.props.history.push('/') //inside this component, we have access to route information on the props that happens automatically when we use the router\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { title, content, imageOnChange, imageFileName } = this.state\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        console.log(this.state.newImage)\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"cyan lighten-5 text-darken-3\">\r\n                    <h5>Editing</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\" className={title ? 'active' : null}>Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            value={title}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\" className={content ? 'active' : null}>Project Content</label>\r\n                        <textarea\r\n                            id=\"content\"\r\n                            className=\"materialize-textarea\"\r\n                            value={content}\r\n                            onChange={this.handleChange}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"input-field flex-row mt-30\">\r\n                        {imageOnChange ? <img src={imageOnChange} alt={imageFileName} className=\"center\" /> : null}\r\n                    </div>\r\n\r\n                    <div className=\"file-field input-field mt-60\">\r\n                        <div class=\"btn\">\r\n                            <span>Change image</span>\r\n                            <input id=\"image\" type=\"file\" accept=\"image/*\" onChange={this.handleImage} />\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-row mt-30\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Cancel</Link>\r\n                        <button className=\"btn teal lighten-1 z-depth-0\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.match.params.id\r\n    const instructions = state.firestore.data.instructions\r\n    const instruction = instructions ? instructions[instructionId] : null\r\n    return {\r\n        auth: state.firebase.auth,\r\n        instruction: instruction,\r\n        instructionId: instructionId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editInstruction: (instruction) => dispatch(editInstruction(instruction))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(EditInstruction);","import React from 'react'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nconst InstructionSummary = ({ instruction, authUid, quesAvailable }) => {\r\n    console.log(quesAvailable)\r\n    const onAuthor = () => {\r\n        if (authUid && authUid === instruction.authorId) {\r\n            return (\r\n                <p>Posted by You</p>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Posted by {instruction.authorFirstName} {instruction.authorLastName}</div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card z-depth-0 instruction-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title font-weight-350\">{instruction.title}</span>\r\n                {authUid && !quesAvailable ? <h6 className=\"red-text mt-30\">There is no question for this instruction. Please add the question to verify the understanding of student</h6> : null}\r\n                <div className=\"mt-30\">\r\n                    {onAuthor()}\r\n                    <p className=\"grey-text\">{moment(instruction.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.instruction.id\r\n    const questions = state.firestore.ordered.questions\r\n    let quesAvailable = false\r\n\r\n    if (questions && questions.length > 0) {\r\n        const question = questions.filter(question => {\r\n            return question.instructionId === instructionId\r\n        })\r\n        if (question && questions.length > 0) {\r\n            question.map(ques => {\r\n                return quesAvailable = true\r\n            })\r\n        }\r\n    }\r\n\r\n    return {\r\n        quesAvailable: quesAvailable\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'questions'\r\n        }\r\n    ])\r\n)(InstructionSummary);","import React from 'react'\r\nimport InstructionSummary from './InstructionSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst InstructionList = ({ instructions, authUid }) => {\r\n\r\n    if (instructions && instructions.length > 0) {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 offset-m2\">\r\n                    <div className=\"section\">\r\n                        {\r\n                            instructions.map(instruction => {\r\n                                return (\r\n                                    <Link to={'/instruction/' + instruction.id} key={instruction.id}>\r\n                                        <InstructionSummary instruction={instruction} authUid={authUid} />\r\n                                    </Link>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    } else if (!instructions || instructions.length === 0) {\r\n        return (\r\n            <div className=\"container center black-text\">\r\n                <p>There is no Instruction to view ...</p>\r\n                <p>Please add Instruction ...</p>\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading instruction...</p>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default InstructionList;","import React, { Component } from 'react'\r\nimport InstructionSummary from '../instructions/InstructionSummary';\r\nimport { withAlert } from 'react-alert'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass StudentInstruc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: 0,\r\n            instructions: [],\r\n            disabled: false,\r\n            quesDisabled: true\r\n        };\r\n    }\r\n\r\n    onMoveToNextIns = () => {\r\n        const { instructions, answer, questions } = this.props\r\n        const { index } = this.state\r\n        const newInstruction = instructions[index]\r\n        console.log(newInstruction)\r\n\r\n        if (answer === true && newInstruction) {\r\n            console.log('th1')\r\n            this.setState({\r\n                instructions: [\r\n                    ...this.state.instructions,\r\n                    newInstruction\r\n                ],\r\n                index: index + 1,\r\n                instructionId: newInstruction.id,\r\n            })\r\n\r\n            if (index === instructions.length - 1) {\r\n                this.setState({\r\n                    index: 0,\r\n                    disabled: true\r\n                })\r\n            }\r\n\r\n            const question = questions.filter(question => {\r\n                return question.instructionId === newInstruction.id\r\n            })\r\n\r\n            if (question && question.length > 0) {\r\n                this.props.onResetAnswer()\r\n                this.setState({\r\n                    quesDisabled: false\r\n                })\r\n            } else {\r\n                this.props.onHandleQuesAvai()\r\n                this.setState({\r\n                    quesDisabled: true\r\n                })\r\n            }\r\n            this.props.onReceiveDetail(newInstruction)\r\n\r\n        } else if (!newInstruction) {\r\n            const alert = this.props.alert;\r\n            alert.show('There is no instruction !')\r\n\r\n\r\n        } else {\r\n            const alert = this.props.alert;\r\n            console.log('you need to answer first')\r\n            alert.show('you need to pass the question !')\r\n\r\n        }\r\n    }\r\n\r\n    onShowDetail = (instruction) => {\r\n        this.props.onShowDetail()\r\n        this.props.onReceiveDetail(instruction)\r\n    };\r\n\r\n    onShowQuestion = () => {\r\n        this.props.onShowQuestion()\r\n    }\r\n\r\n    render() {\r\n        const { answer } = this.props\r\n        console.log(answer)\r\n        const { instructions, disabled, quesDisabled } = this.state\r\n        console.log(quesDisabled)\r\n        return (\r\n            <div className=\"col s12 m6 offset-m2\">\r\n                <div className=\"section\">\r\n                    {\r\n                        instructions && instructions.map(instruction => {\r\n                            return (\r\n                                <div className=\"card\" key={instruction.id} onClick={() => this.onShowDetail(instruction)} >\r\n                                    <InstructionSummary instruction={instruction} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                {/* Button to show Next Instruction Summary */}\r\n                <button disabled={disabled ? disabled : null} className=\"btn waves-effect waves-light flex-row\" onClick={this.onMoveToNextIns}>See Instructions\r\n                 <i className=\"material-icons \">arrow_downward</i>\r\n                </button>\r\n\r\n                <button disabled={quesDisabled ? quesDisabled : null} className=\"btn waves-effect waves-light flex-row mt-30\" onClick={this.onShowQuestion}>QuestionPopUp</button>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const questions = state.firestore.ordered.questions\r\n    return {\r\n        questions: questions\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAlert(),\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'questions'\r\n        }\r\n    ])\r\n)(StudentInstruc);","import React from 'react';\r\n\r\nconst InstrucDetail = (props) => {\r\n    const { instruction } = props\r\n    const onShowDetail = () => {\r\n        props.onShowDetail()\r\n    }\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content flex-column\">\r\n                    <span className=\"card-title teal-text center heading\">{instruction.title}</span>\r\n                    <p className=\"mt-30\">{instruction.content}</p>\r\n                    {instruction.image ? <img src={instruction.image} alt={instruction.imageFileName} /> : null}\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text flex-row\">\r\n                    <button className=\"btn teal lighten-1 z-depth-0\" onClick={onShowDetail}>Back</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InstrucDetail;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass QuestionDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: {},\r\n            selectedOption: '',\r\n            answer: false\r\n        };\r\n    }\r\n\r\n    onShowQuestion = () => {\r\n        this.props.onShowQuestion()\r\n    }\r\n\r\n    handleOptionChange = e => {\r\n        const selectedOption = e.target.value\r\n        const { question } = this.props\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            answer: question && question.map(ques => {\r\n                if (ques && selectedOption === ques.rightAnswer) {\r\n                    return true\r\n                } else return false\r\n            })\r\n        });\r\n\r\n\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        console.log('You have selected: ', this.state.selectedOption)\r\n\r\n\r\n        console.log(this.state.answer)\r\n        this.props.onAnswer(this.state.answer)\r\n        this.props.onShowQuestion()\r\n    }\r\n\r\n    render() {\r\n        const { question, instruction } = this.props\r\n        console.log(this.state.answer)\r\n        const showQuestionDetail = question && question.map(ques => {\r\n            if (ques) {\r\n\r\n                return (\r\n                    <div className=\"section\" key={question.id}>\r\n                        <div className=\"card z-depth-0\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"card-content flex-column\">\r\n                                    <span className=\"card-title teal-text center heading\">{instruction.title}</span>\r\n\r\n                                    <h6>{question.question}</h6>\r\n                                    <h6>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"answer\" type=\"radio\" value={ques.rightAnswer} onChange={this.handleOptionChange} />\r\n                                            <span>{ques.rightAnswer}</span>\r\n                                        </label>\r\n                                    </h6>\r\n                                    <h6>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"answer\" type=\"radio\" value={ques.answer2} onChange={this.handleOptionChange} />\r\n                                            <span>{ques.answer2}</span>\r\n                                        </label>\r\n                                    </h6>\r\n                                    <h6>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"answer\" type=\"radio\" value={ques.answer3} onChange={this.handleOptionChange} />\r\n                                            <span>{ques.answer3}</span>\r\n                                        </label>\r\n                                    </h6>\r\n                                    <h6>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"answer\" type=\"radio\" value={ques.answer4} onChange={this.handleOptionChange} />\r\n                                            <span>{ques.answer4}</span>\r\n                                        </label>\r\n                                    </h6>\r\n\r\n                                </div>\r\n                                <div className=\"flex-row\">\r\n                                    <button className=\"btn teal lighten-1 z-depth-0\" onClick={this.onShowQuestion}>Back</button>\r\n                                    <button className=\"btn teal lighten-1 z-depth-0\" >Answer</button>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return <div key=\"no-question\">There is no question</div>\r\n            }\r\n\r\n\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {showQuestionDetail}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const questions = state.firestore.ordered.questions\r\n    const instructionId = ownProps.instruction.id\r\n    const question = questions.filter(question => {\r\n        return question.instructionId === instructionId\r\n    })\r\n    return {\r\n        question: question\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'questions'\r\n        }\r\n    ])\r\n)(QuestionDetail);","import React, { Component } from 'react'\r\nimport InstructionList from '../instructions/InstructionList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport StudentInstruc from '../student/StudentInstruc'\r\nimport InstrucDetail from '../student/InstrucDetail'\r\nimport QuestionDetail from '../student/QuestionDetail'\r\n\r\nclass TeacherDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDetail: false,\r\n            instruction: {},\r\n            showQuestion: false,\r\n            answer: true,\r\n        };\r\n    }\r\n\r\n    onShowDetail = () => {\r\n        const { showDetail } = this.state\r\n        this.setState({\r\n            showDetail: !showDetail\r\n        })\r\n    }\r\n\r\n    onReceiveDetail = (instruction) => {\r\n        this.setState({\r\n            instruction: instruction\r\n        })\r\n    }\r\n\r\n    onShowQuestion = () => {\r\n        const { showQuestion } = this.state\r\n        this.setState({\r\n            showQuestion: !showQuestion\r\n        })\r\n    }\r\n\r\n    onResetAnswer = () => {\r\n        this.setState({ answer: false })\r\n    }\r\n\r\n    onAnswer = (answers) => {\r\n        console.log(answers)\r\n        answers.map(answer => {\r\n            if (answer === true) {\r\n                this.setState({ answer: true })\r\n                return true\r\n            }\r\n            else {\r\n                this.setState({ answer: false })\r\n                console.log('answer is false')\r\n                return false\r\n            }\r\n        })\r\n    }\r\n\r\n    onHandleQuesAvai = () => {\r\n        this.setState({ answer: true })\r\n    }\r\n\r\n    render() {\r\n        const { instructions, auth } = this.props\r\n        const { showDetail, instruction, showQuestion, answer } = this.state\r\n        return (\r\n            <div className={showDetail ? 'container relative' : 'container'}>\r\n                <div className={showDetail || showQuestion ? 'row invisible' : 'row'}>\r\n                    {\r\n                        auth.uid ?\r\n                            <InstructionList instructions={instructions} authUid={auth.uid} /> :\r\n                            <StudentInstruc\r\n                                instructions={instructions}\r\n                                onShowDetail={this.onShowDetail}\r\n                                onReceiveDetail={this.onReceiveDetail}\r\n                                onShowQuestion={this.onShowQuestion}\r\n                                onInstructionId={this.onInstructionId}\r\n                                answer={answer}\r\n                                onResetAnswer={this.onResetAnswer}\r\n                                onAnswerCheck={this.onAnswerCheck}\r\n                                onHandleQuesAvai={this.onHandleQuesAvai}\r\n                            />\r\n                    }\r\n                </div>\r\n\r\n                <div className={showDetail ? 'popup' : null}>\r\n                    {showDetail ? <InstrucDetail instruction={instruction} onShowDetail={this.onShowDetail} /> : null}\r\n                </div>\r\n\r\n                <div className={showQuestion ? 'popup' : null}>\r\n                    {\r\n                        showQuestion ?\r\n                            <QuestionDetail\r\n                                instruction={instruction}\r\n                                onShowQuestion={this.onShowQuestion}\r\n                                onAnswer={this.onAnswer}\r\n                            /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        instructions: state.firestore.ordered.instructions,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'instructions'\r\n        }\r\n    ])\r\n)(TeacherDashboard);","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addQuestion } from '../../store/actions/questionActions'\r\n\r\nclass AddQuestion extends Component {\r\n    state = {\r\n        question: '',\r\n        rightAnswer: '',\r\n        answer2: '',\r\n        answer3: '',\r\n        answer4: ''\r\n    }\r\n\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { instructionId, authorId } = this.props\r\n        this.props.addQuestion(this.state, instructionId, authorId)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth, authorId } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        if (auth.uid !== authorId) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Add Question</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"question\">Question</label>\r\n                        <input type=\"text\" id=\"question\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"rightAnswer\">Right Answer</label>\r\n                        <textarea id=\"rightAnswer\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"answer2\">Answer 2</label>\r\n                        <textarea id=\"answer2\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"answer3\">Answer 3</label>\r\n                        <textarea id=\"answer3\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"answer4\">Answer 4</label>\r\n                        <textarea id=\"answer4\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"flex-row\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Back</Link>\r\n                        <button className=\"btn teal lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.match.params.id\r\n    const authorId = ownProps.match.params.authorId\r\n    return {\r\n        auth: state.firebase.auth,\r\n        instructionId: instructionId,\r\n        authorId: authorId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addQuestion: (question, instructionId, authorId) => dispatch(addQuestion(question, instructionId, authorId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddQuestion);","export const addQuestion = (question, instructionId, authorId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('questions').add({\r\n            ...question,\r\n            instructionId: instructionId,\r\n            authorId: authorId\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_QUESTION', question })\r\n        }).catch(err => {\r\n            dispatch({ type: 'ADD_QUESTION_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const editQuestion = (question, questionId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('questions').doc(questionId).update({\r\n            ...question\r\n        }).then(() => {\r\n            dispatch({ type: 'EDIT_QUESTION', question })\r\n        }).catch(err => {\r\n            dispatch({ type: 'EDIT_QUESTION_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteQuestion = (question, questionId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore\r\n            .collection('questions')\r\n            .doc(questionId)\r\n            .delete()\r\n            .then(() => {\r\n                dispatch({ type: 'DELETE_QUESTION', questionId })\r\n            }).catch(err => {\r\n                dispatch({ type: 'DELETE_QUESTION_ERROR', err })\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst QuestionSummary = (props) => {\r\n    const { question, instructionId, title, auth } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    const onShowQuestion = () => {\r\n        if (question && question.length > 0) {\r\n            return question.map(ques => {\r\n                if (ques) {\r\n                    console.log('th2')\r\n                    console.log(ques)\r\n                    return (\r\n                        <Link to={'/instruction/' + instructionId + '/' + title + '/question/' + ques.id + '/edit'} key={ques.id}>\r\n                            <div className=\"card mt-60\">\r\n                                <div className=\"card-content grey-text text-darken-3\">\r\n                                    <h6 className=\"bold\">{ques.question}</h6>\r\n                                    <div className=\"mt-30\">\r\n                                        <h6><span className=\"bold\"> Option 1:</span> &nbsp; <span className=\"italic\">{ques.answer2}</span></h6>\r\n                                        <h6><span className=\"bold\"> Option 2:</span> &nbsp; <span className=\"italic\">{ques.answer3}</span></h6>\r\n                                        <h6><span className=\"bold\"> Option 3:</span> &nbsp; <span className=\"italic\">{ques.answer4}</span></h6>\r\n                                        <h6><span className=\"bold\"> Right Answer:</span> &nbsp; <span className=\"italic red-text\">{ques.rightAnswer}</span></h6>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                } else {\r\n                    return <h6 className=\"mt-60 center\" key=\"no-question\">There is no question. Please add question !</h6>\r\n                }\r\n            })\r\n        } else {\r\n            return <h6 className=\"mt-60 center\">There is no question. Please add question !</h6>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m4 offset-m4\">\r\n                <div className=\"card z-depth-0 instruction-summary\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <span className=\"card-title teal-text center heading\">{title}</span>\r\n                        {onShowQuestion()}\r\n                        <Link to={'/instruction/' + instructionId} className=\"btn teal lighten-1 z-depth-0 mt-60\">Back</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.match.params.id\r\n    console.log(instructionId)\r\n    const title = ownProps.match.params.title\r\n    const questions = state.firestore.ordered.questions\r\n    let question\r\n    if (questions && questions.length > 0) {\r\n        question = questions.filter(question => {\r\n            return question.instructionId === instructionId\r\n        })\r\n    }\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        title: title,\r\n        instructionId: instructionId,\r\n        question: question\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'questions'\r\n        }\r\n    ])\r\n)(QuestionSummary);","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { editQuestion } from '../../store/actions/questionActions'\r\nimport { deleteQuestion } from '../../store/actions/questionActions'\r\n\r\nclass EditQuestion extends Component {\r\n    state = {\r\n        question: '',\r\n        rightAnswer: '',\r\n        answer2: '',\r\n        answer3: '',\r\n        answer4: ''\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const { question } = this.props\r\n        if (question) {\r\n            this.setState({\r\n                question: question.question,\r\n                rightAnswer: question.rightAnswer,\r\n                answer2: question.answer2,\r\n                answer3: question.answer3,\r\n                answer4: question.answer4\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { question } = nextProps\r\n        if (question) {\r\n            this.setState({\r\n                question: question.question,\r\n                rightAnswer: question.rightAnswer,\r\n                answer2: question.answer2,\r\n                answer3: question.answer3,\r\n                answer4: question.answer4\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { questionId, instructionId, title } = this.props\r\n        this.props.editQuestion(this.state, questionId)\r\n        this.props.history.push(`/instruction/${instructionId}/${title}/question`)\r\n    }\r\n\r\n    onDelete = () => {\r\n        const { questionId, question, auth } = this.props\r\n        if (auth.uid === question.authorId) {\r\n            if (window.confirm('Are you sure you want to delete ?')) {\r\n                this.props.deleteQuestion(question, questionId)\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { auth, instructionId, title } = this.props\r\n        const { question, rightAnswer, answer2, answer3, answer4 } = this.state\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Editing Question</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"question\" className={question ? 'active' : null}>Question</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"question\"\r\n                            onChange={this.handleChange}\r\n                            value={question}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"rightAnswer\" className={rightAnswer ? 'active' : null}>Right Answer</label>\r\n                        <textarea\r\n                            id=\"rightAnswer\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}\r\n                            value={rightAnswer}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"answer2\" className={answer2 ? 'active' : null}>Answer 2</label>\r\n                        <textarea\r\n                            id=\"answer2\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}\r\n                            value={answer2}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"answer3\" className={answer3 ? 'active' : null}>Answer 3</label>\r\n                        <textarea\r\n                            id=\"answer3\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}\r\n                            value={answer3}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"answer4\" className={answer4 ? 'active' : null}>Answer 4</label>\r\n                        <textarea\r\n                            id=\"answer4\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}\r\n                            value={answer4}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"flex-row\">\r\n                        <Link to={'/instruction/' + instructionId + '/' + title + '/question'} className=\"btn teal lighten-1 z-depth-0\">Cancel</Link>\r\n                        <div>\r\n                            <button className=\"btn teal lighten-1 z-depth-0 mr-30\" onClick={this.onDelete}>Delete Question</button>\r\n                            <button className=\"btn teal lighten-1 z-depth-0\" type=\"submit\">Save</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const questionId = ownProps.match.params.quesId\r\n    const instructionId = ownProps.match.params.instrucId\r\n    const title = ownProps.match.params.title\r\n    const questions = state.firestore.data.questions\r\n    const question = questions ? questions[questionId] : null\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        question: question,\r\n        questionId: questionId,\r\n        instructionId: instructionId,\r\n        title: title\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editQuestion: (question, questionId) => dispatch(editQuestion(question, questionId)),\r\n        deleteQuestion: (question, questionId) => dispatch(deleteQuestion(question, questionId))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'questions'\r\n        }\r\n    ])\r\n)(EditQuestion);","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/navbar/NavBar'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport InstructionDetail from './components/instructions/InstructionDetail'\nimport CreateInstruction from './components/instructions/CreateInstruction'\nimport EditInstruction from './components/instructions/EditInstruction'\nimport Dashboard from './components/dashboard/Dashboard'\nimport AddQuestion from './components/questions/AddQuestion'\nimport QuestionSummary from './components/questions/QuestionSummary'\nimport EditQuestion from './components/questions/EditQuestion'\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar />\n                <Switch>\n                    <Route exact path='/' component={Dashboard} />\n                    <Route path='/signin' component={SignIn} />\n                    <Route path='/signup' component={SignUp} />\n                    <Route exact path='/instruction/:id' component={InstructionDetail} />\n                    <Route path='/create' component={CreateInstruction} />\n                    <Route path='/instruction/:id/edit' component={EditInstruction} />\n                    <Route path='/instruction/:id-:authorId/newQuestion' component={AddQuestion} />\n                    <Route exact path='/instruction/:id/:title/question' component={QuestionSummary} />\n                    <Route path='/instruction/:instrucId/:title/question/:quesId/edit' component={EditQuestion} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {}\r\n\r\nconst instructionReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_INSTRUCTION':\r\n            console.log('create instruction', action.instruction)\r\n            return state\r\n        case 'CREATE_INSTRUCTION_ERROR':\r\n            console.log('create instruction error', action.error)\r\n            return state\r\n        case 'EDIT_INSTRUCTION':\r\n            console.log('edited instruction', action.instruction)\r\n            return state\r\n        case 'EDIT_INSTRUCTION_ERROR':\r\n            console.log('edit instruction error', action.err)\r\n            return state\r\n        case 'DELETE_INSTRUCTION':\r\n            console.log('deleted instruction', action.id)\r\n            return state\r\n        case 'DELETE_INSTRUCTION_ERROR':\r\n            console.log('deleted instruction error', action.err)\r\n            return state\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default instructionReducer","const initState = {}\r\n\r\nconst questionReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_QUESTION':\r\n            console.log('add question', action.question)\r\n            return state\r\n        case 'ADD_QUESTION_ERROR':\r\n            console.log('add question error', action.error)\r\n            return state\r\n        case 'EDIT_QUESTION':\r\n            console.log('edited instruction', action.question)\r\n            return state\r\n        case 'EDIT_QUESTION_ERROR':\r\n            console.log('edit instruction error', action.err)\r\n            return state\r\n        case 'DELETE_QUESTION':\r\n            console.log('deleted instruction', action.id)\r\n            return state\r\n        case 'DELETE_QUESTION_ERROR':\r\n            console.log('deleted instruction error', action.err)\r\n            return state\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default questionReducer","import authReducer from './authReducer'\r\nimport instructionReducer from './instructionReducer'\r\nimport questionReducer from './questionReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    instruction: instructionReducer,\r\n    question: questionReducer,\r\n    // sync data from firestore database\r\n    firestore: firestoreReducer,\r\n    // authentication\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBzgWLIrtxnjRdiTn_7SIfoKTCi6pKkzmE\",\r\n    authDomain: \"critical-instructions-lab.firebaseapp.com\",\r\n    databaseURL: \"https://critical-instructions-lab.firebaseio.com\",\r\n    projectId: \"critical-instructions-lab\",\r\n    storageBucket: \"critical-instructions-lab.appspot.com\",\r\n    messagingSenderId: \"121402491624\",\r\n    appId: \"1:121402491624:web:a18042474c049be805ff5d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage()\r\n\r\nexport {\r\n    storage, firebase as default\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // attachAuthIsReady make sure that authentication on firebase is ready before rendering a DOM\n  )\n)\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.Fragment>\n      <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...options}>\n          <App />\n        </AlertProvider>\n      </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n})"],"sourceRoot":""}