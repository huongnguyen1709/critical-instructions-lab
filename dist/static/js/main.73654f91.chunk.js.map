{"version":3,"sources":["components/navbar/SignedInLinks.js","store/actions/authActions.js","components/navbar/SignedOutLinks.js","components/navbar/NavBar.js","components/auth/SignIn.js","components/auth/SignUp.js","components/instructions/InstructionDetail.js","store/actions/instructionActions.js","components/instructions/CreateInstruction.js","components/instructions/InstructionSummary.js","components/instructions/InstructionList.js","components/dashboard/TeacherDashboard.js","components/dashboard/StudentDashboard.js","components/dashboard/HomePage.js","components/instructions/EditInstruction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/instructionReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignIn","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","this","authError","onSubmit","htmlFor","onChange","Component","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","compose","ownProps","instructionId","match","params","instructions","data","instruction","deleteInstruction","delete","err","firestoreConnect","title","src","image","alt","content","authorId","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","window","confirm","history","push","onDelete","onActionInstruction","CreateInstruction","handleImage","files","createInstruction","class","accept","file","storage","ref","name","put","on","snapshot","child","getDownloadURL","url","add","Date","InstructionSummary","InstructionList","map","key","TeacherDashboard","ordered","StudentDashboard","HomePage","EditInstruction","URL","createObjectURL","editInstruction","nextProps","update","App","exact","path","component","InstructionDetail","Boolean","location","hostname","initState","authReducer","action","message","instructionReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73654f91.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Instruction</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'LOGIN_ERROR', error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            console.log(resp)\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n                email: newUser.email,\r\n                password: newUser.password\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">theFirma</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: creds => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { deleteInstruction } from '../../store/actions/instructionActions'\r\n\r\nconst InstructionDetail = (props) => {\r\n    const { instruction, auth, instructionId } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    const onDelete = (instructionId) => {\r\n        if (auth.uid === instruction.authorId) {\r\n            if (window.confirm('Are you sure you want to delete ?')) {\r\n                props.deleteInstruction(instructionId)\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const onActionInstruction = () => {\r\n        if (auth.uid === instruction.authorId) {\r\n            return (\r\n                <div>\r\n                    <Link to={'/instruction/' + instructionId + '/edit'} className=\"btn teal lighten-1 z-depth-0 mr-30\" >Edit</Link>\r\n                    <button className=\"btn teal lighten-1 z-depth-0\" onClick={() => onDelete(instructionId)}>Delete</button>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    const onAuthor = () => {\r\n        if (auth.uid === instruction.authorId) {\r\n            return <div>Posted by You</div>\r\n        } else {\r\n            return <div>Posted by {instruction.authorFirstName} {instruction.authorLastName}</div>\r\n        }\r\n    }\r\n\r\n    if (instruction) {\r\n        return (\r\n            <div className=\"container section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content flex-column\">\r\n                        <span className=\"card-title teal-text center heading\">{instruction.title}</span>\r\n                        <img src={instruction.image} alt=\"There is no image\" />\r\n                        <p className=\"mt-30\">{instruction.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text flex-row\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Back</Link>\r\n                        <span className=\"center\">\r\n                            {onAuthor()}\r\n                            <div>{moment(instruction.createdAt.toDate()).calendar()}</div>\r\n                        </span>\r\n                        {onActionInstruction()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading instruction...</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.match.params.id\r\n    const instructions = state.firestore.data.instructions\r\n    const instruction = instructions ? instructions[instructionId] : null\r\n    return {\r\n        instruction: instruction,\r\n        auth: state.firebase.auth,\r\n        instructionId: instructionId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteInstruction: (instructionId) => dispatch(deleteInstruction(instructionId))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(InstructionDetail);","export const createInstruction = instruction => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        const file = instruction.image\r\n\r\n        if (file) {\r\n            console.log(file)\r\n            const storageRef = firebase.storage().ref(`images/${file.name}`)\r\n            const uploadTask = storageRef.put(file)\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                snapshot => { },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    firebase.storage()\r\n                        .ref(\"images\")\r\n                        .child(instruction.image.name)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            console.log(url)\r\n                            firestore.collection('instructions').add({\r\n                                ...instruction,\r\n                                image: url,\r\n                                authorFirstName: profile.firstName,\r\n                                authorLastName: profile.lastName,\r\n                                authorId: authorId,\r\n                                createdAt: new Date()\r\n                            }).then(() => {\r\n                                dispatch({ type: 'CREATE_INSTRUCTION', instruction })\r\n                            }).catch((error) => {\r\n                                dispatch({ type: 'CREATE_INSTRUCTION_ERROR', error })\r\n                            })\r\n                        })\r\n                }\r\n            )\r\n        } else {\r\n            firestore.collection('instructions').add({\r\n                ...instruction,\r\n                image: null,\r\n                authorFirstName: profile.firstName,\r\n                authorLastName: profile.lastName,\r\n                authorId: authorId,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({ type: 'CREATE_INSTRUCTION', instruction })\r\n            }).catch((error) => {\r\n                dispatch({ type: 'CREATE_INSTRUCTION_ERROR', error })\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const editInstruction = (instruction) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('instructions').doc(instruction.id).update({\r\n            ...instruction\r\n        }).then(() => {\r\n            dispatch({ type: 'EDIT_INSTRUCTION', instruction })\r\n        }).catch(err => {\r\n            dispatch({ type: 'EDIT_INSTRUCTION_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteInstruction = (instructionId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore\r\n            .collection('instructions')\r\n            .doc(instructionId)\r\n            .delete()\r\n            .then(() => {\r\n                dispatch({ type: 'DELETE_INSTRUCTION', instructionId })\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: 'DELETE_INSTRUCTION_ERROR', err })\r\n            })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createInstruction } from '../../store/actions/instructionActions'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nclass CreateInstruction extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        image: null\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = e => {\r\n        if (e.target.files[0])\r\n            this.setState({\r\n                image: e.target.files[0]\r\n            })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.createInstruction(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">New Instruction</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Instruction Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"file-field input-field mt-30\">\r\n                        <div class=\"btn\">\r\n                            <span>Select image</span>\r\n                            <input id=\"image\" type=\"file\" accept=\"image/*\" onChange={this.handleImage} />\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-row\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Back</Link>\r\n\r\n                        <div className=\"input-field \">\r\n                            <button className=\"btn teal lighten-1 z-depth-0\">Create</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createInstruction: instruction => dispatch(createInstruction(instruction))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateInstruction);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst InstructionSummary = ({ instruction }) => {\r\n    return (\r\n\r\n        <div className=\"card z-depth-0 instruction-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{instruction.title}</span>\r\n                <p>Posted by {instruction.authorFirstName} {instruction.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(instruction.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InstructionSummary;","import React from 'react'\r\nimport InstructionSummary from './InstructionSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst InstructionList = ({ instructions }) => {\r\n    return (\r\n        <div className=\"instruction-list section\">\r\n            {instructions && instructions.map(instruction => {\r\n                return (\r\n                    <Link to={'/instruction/' + instruction.id} key={instruction.id}>\r\n                        <InstructionSummary instruction={instruction} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InstructionList;","import React, { Component } from 'react'\r\nimport Notifications from '../dashboard/Notifications'\r\nimport InstructionList from '../instructions/InstructionList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass TeacherDashboard extends Component {\r\n    state = {}\r\n    render() {\r\n        const { instructions } = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6 offset-m2\">\r\n                        <InstructionList instructions={instructions} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instructions: state.firestore.ordered.instructions,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(TeacherDashboard);","import React, { Component } from 'react'\r\n\r\nclass StudentDashboard extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s8 offset-s2\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentDashboard;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TeacherDashboard from './TeacherDashboard';\r\nimport StudentDashboard from './StudentDashboard';\r\n\r\nclass HomePage extends Component {\r\n    state = {}\r\n    render() {\r\n        const { auth } = this.props\r\n        return (\r\n            <div>\r\n                {\r\n                    auth.uid ? <TeacherDashboard /> : <StudentDashboard />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editInstruction } from '../../store/actions/instructionActions'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass EditInstruction extends Component {\r\n    state = {\r\n        id: '',\r\n        title: '',\r\n        content: '',\r\n        image: null\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { instructionId, instruction } = this.props\r\n        if (instructionId && instruction) {\r\n            this.setState({\r\n                id: instructionId,\r\n                title: instruction.title,\r\n                content: instruction.content,\r\n                image: instruction.image\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { instructionId, instruction } = nextProps\r\n        if (instructionId && instruction) {\r\n            this.setState({\r\n                id: instructionId,\r\n                title: instruction.title,\r\n                content: instruction.content,\r\n                image: instruction.image\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = e => {\r\n        if (e.target.files && e.target.files[0])\r\n            this.setState({\r\n                image: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        console.log(this.state.image)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { auth, instruction } = this.props\r\n        if (auth.uid === instruction.authorId) {\r\n            this.props.editInstruction(this.state)\r\n            this.props.history.push('/') //inside this component, we have access to route information on the props that happens automatically when we use the router\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { title, content, image } = this.state\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"cyan lighten-5 text-darken-3\">\r\n                    <h5>Editing</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\" className={title ? 'active' : null}>Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            value={title}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\" className={content ? 'active' : null}>Project Content</label>\r\n                        <textarea\r\n                            id=\"content\"\r\n                            className=\"materialize-textarea\"\r\n                            value={content}\r\n                            onChange={this.handleChange}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"input-field flex-row mt-30\">\r\n                        <img src={image} alt=\"There is no image\" className=\"center\" />\r\n                    </div>\r\n\r\n                    <div className=\"file-field input-field mt-60\">\r\n                        <div class=\"btn\">\r\n                            <span>Select image</span>\r\n                            <input id=\"image\" type=\"file\" accept=\"image/*\" onChange={this.handleImage} />\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-row mt-30\">\r\n                        <Link to='/' className=\"btn teal lighten-1 z-depth-0\">Back</Link>\r\n                        <button className=\"btn teal lighten-1 z-depth-0\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const instructionId = ownProps.match.params.id\r\n    const instructions = state.firestore.data.instructions\r\n    const instruction = instructions ? instructions[instructionId] : null\r\n    return {\r\n        auth: state.firebase.auth,\r\n        instruction: instruction,\r\n        instructionId: instructionId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editInstruction: (instruction) => dispatch(editInstruction(instruction))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'instructions' }\r\n    ])\r\n)(EditInstruction);","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/navbar/NavBar'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport InstructionDetail from './components/instructions/InstructionDetail'\nimport CreateInstruction from './components/instructions/CreateInstruction'\nimport HomePage from './components/dashboard/HomePage'\nimport EditInstruction from './components/instructions/EditInstruction'\n\nfunction App(props) {\n    const { auth } = props\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar />\n                <Switch>\n                    <Route exact path='/' component={HomePage} />\n                    <Route path='/signin' component={SignIn} />\n                    <Route path='/signup' component={SignUp} />\n                    <Route exact path='/instruction/:id' component={InstructionDetail} />\n                    <Route path='/create' component={CreateInstruction} />\n                    <Route path='/instruction/:id/edit' component={EditInstruction} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {}\r\n\r\nconst instructionReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_INSTRUCTION':\r\n            console.log('create instruction', action.instruction)\r\n            return state\r\n        case 'CREATE_INSTRUCTION_ERROR':\r\n            console.log('create instruction error', action.error)\r\n            return state\r\n        case 'EDIT_INSTRUCTION':\r\n            console.log('edited instruction', action.instruction)\r\n            return state\r\n        case 'EDIT_INSTRUCTION_ERROR':\r\n            console.log('edit instruction error', action.err)\r\n            return state\r\n        case 'DELETE_INSTRUCTION':\r\n            console.log('deleted instruction', action.id)\r\n            return state\r\n        case 'DELETE_INSTRUCTION_ERROR':\r\n            console.log('deleted instruction error', action.err)\r\n            return state\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default instructionReducer","import authReducer from './authReducer'\r\nimport instructionReducer from './instructionReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    instruction: instructionReducer,\r\n    // sync data from firestore database\r\n    firestore: firestoreReducer,\r\n    // authentication\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBzgWLIrtxnjRdiTn_7SIfoKTCi6pKkzmE\",\r\n    authDomain: \"critical-instructions-lab.firebaseapp.com\",\r\n    databaseURL: \"https://critical-instructions-lab.firebaseio.com\",\r\n    projectId: \"critical-instructions-lab\",\r\n    storageBucket: \"critical-instructions-lab.appspot.com\",\r\n    messagingSenderId: \"121402491624\",\r\n    appId: \"1:121402491624:web:a18042474c049be805ff5d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage()\r\n\r\nexport {\r\n    storage, firebase as default\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // attachAuthIsReady make sure that authentication on firebase is ready before rendering a DOM\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.Fragment>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n})"],"sourceRoot":""}